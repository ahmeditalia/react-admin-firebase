{"version":3,"file":"index.esm.mjs","sources":["../src/misc/arrayHelpers.ts","../src/misc/objectFlatten.ts","../src/misc/logger/logger-base.ts","../src/misc/logger/firestore-logger.ts","../src/misc/logger/logger.ts","../src/misc/dispatcher.ts","../src/misc/internal.models.ts","../src/misc/translate-from-firestore.ts","../src/misc/document-parser.ts","../src/misc/pathHelper.ts","../src/misc/translate-to-firestore.ts","../src/providers/database/firebase/FirebaseWrapper.ts","../src/providers/AuthProvider.ts","../src/misc/status-code-translator.ts","../src/providers/commands/Create.ts","../src/providers/commands/Delete.ts","../src/providers/commands/Delete.Soft.ts","../src/providers/commands/DeleteMany.ts","../src/providers/commands/DeleteMany.Soft.ts","../src/providers/commands/Update.ts","../src/providers/commands/UpdateMany.ts","../src/providers/database/ResourceManager.ts","../src/providers/database/FireClient.ts","../src/misc/storage-parser.ts","../src/misc/metadata-parser.ts","../src/misc/firebase-models.ts","../src/providers/lazy-loading/queryCursors.ts","../src/providers/lazy-loading/paramsToQuery.ts","../src/providers/lazy-loading/FirebaseLazyLoadingClient.ts","../src/providers/queries/GetList.ts","../src/providers/queries/GetMany.ts","../src/providers/queries/GetManyReference.ts","../src/providers/queries/GetOne.ts","../src/providers/DataProvider.ts"],"sourcesContent":["import { get, isEmpty } from 'lodash';\r\nimport { getFieldReferences, SearchObj } from './objectFlatten';\r\n\r\nexport function sortArray(\r\n  data: Array<{}>,\r\n  field: string,\r\n  dir: 'asc' | 'desc'\r\n): void {\r\n  data.sort((a: {}, b: {}) => {\r\n    const rawA = get(a, field);\r\n    const rawB = get(b, field);\r\n    const isAsc = dir === 'asc';\r\n\r\n    const isNumberField = Number.isFinite(rawA) && Number.isFinite(rawB);\r\n    if (isNumberField) {\r\n      return basicSort(rawA, rawB, isAsc);\r\n    }\r\n    const isStringField = typeof rawA === 'string' && typeof rawB === 'string';\r\n    if (isStringField) {\r\n      const aParsed = rawA.toLowerCase();\r\n      const bParsed = rawB.toLowerCase();\r\n      return basicSort(aParsed, bParsed, isAsc);\r\n    }\r\n    const isDateField = rawA instanceof Date && rawB instanceof Date;\r\n    if (isDateField) {\r\n      return basicSort(rawA, rawB, isAsc);\r\n    }\r\n    return basicSort(!!rawA, !!rawB, isAsc);\r\n  });\r\n}\r\n\r\nfunction basicSort(aValue: any, bValue: any, isAsc: boolean) {\r\n  if (aValue > bValue) {\r\n    return isAsc ? 1 : -1;\r\n  }\r\n  if (aValue < bValue) {\r\n    return isAsc ? -1 : 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function filterArray(\r\n  data: Array<{}>,\r\n  searchFields?: { [field: string]: string | number | boolean | null }\r\n): Array<{}> {\r\n  if (!searchFields || isEmpty(searchFields)) {\r\n    return data;\r\n  }\r\n  const searchObjs: SearchObj[] = [];\r\n  Object.keys(searchFields).map((fieldName) => {\r\n    const fieldValue = searchFields[fieldName];\r\n    const getSubObjects = getFieldReferences(fieldName, fieldValue);\r\n    searchObjs.push(...getSubObjects);\r\n  });\r\n  const filtered = data.filter((row) =>\r\n    searchObjs.reduce((acc, cur) => {\r\n      const res = doesRowMatch(row, cur.searchField, cur.searchValue);\r\n      return res && acc;\r\n    }, true as boolean)\r\n  );\r\n  return filtered;\r\n}\r\n\r\nexport function doesRowMatch(\r\n  row: {},\r\n  searchField: string,\r\n  searchValue: any\r\n): boolean {\r\n  const searchThis = get(row, searchField);\r\n  const bothAreFalsey = !searchThis && !searchValue;\r\n  if (bothAreFalsey) {\r\n    return true;\r\n  }\r\n  const nothingToSearch = !searchThis;\r\n  if (nothingToSearch) {\r\n    return false;\r\n  }\r\n  const isStringSearch = typeof searchValue === 'string';\r\n  if (isStringSearch) {\r\n    return searchThis\r\n      .toString()\r\n      .toLowerCase()\r\n      .includes(searchValue.toLowerCase());\r\n  }\r\n  const isBooleanOrNumber =\r\n    typeof searchValue === 'boolean' || typeof searchValue === 'number';\r\n  if (isBooleanOrNumber) {\r\n    return searchThis === searchValue;\r\n  }\r\n  const isArraySearch = Array.isArray(searchValue);\r\n  if (isArraySearch) {\r\n    return searchValue.includes(searchThis);\r\n  }\r\n  return false;\r\n}\r\n","type SearchValues = {} | number | string | boolean | null;\r\ntype SearchValue = SearchValues | SearchValue[];\r\n\r\nexport interface SearchObj {\r\n  searchField: string;\r\n  searchValue: SearchValue;\r\n}\r\nexport function getFieldReferences(\r\n  fieldName: string,\r\n  value: {} | SearchValue\r\n): SearchObj[] {\r\n  const isFalsy = !value;\r\n  const isSimple =\r\n    isFalsy ||\r\n    typeof value === 'string' ||\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean';\r\n\r\n  if (isSimple) {\r\n    return [\r\n      {\r\n        searchField: fieldName,\r\n        searchValue: value as SearchValue,\r\n      },\r\n    ];\r\n  }\r\n  const tree = {} as Record<string, SearchValue>;\r\n  tree[fieldName] = value;\r\n  return objectFlatten(tree);\r\n}\r\n\r\nexport function objectFlatten(tree: {}): SearchObj[] {\r\n  var leaves: SearchObj[] = [];\r\n  var recursivelyWalk = (obj: any, path: string | null) => {\r\n    path = path || '';\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const objVal = obj && obj[key];\r\n        const currentPath = !!path ? path + '.' + key : key;\r\n        const isWalkable =\r\n          typeof objVal === 'object' || objVal instanceof Array;\r\n        if (isWalkable) {\r\n          recursivelyWalk(objVal, currentPath);\r\n        } else {\r\n          leaves.push({ searchField: currentPath, searchValue: objVal });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  recursivelyWalk(tree, null);\r\n  return leaves;\r\n}\r\n","type LogFn = (...args: any) => void;\r\n\r\nexport const LogNoOp: LogFn = (...args: any) => null;\r\n\r\nexport class LoggerBase {\r\n  constructor(private title: string, private cacheEnabledKey: string) {}\r\n\r\n  private isEnabled() {\r\n    return !!localStorage.getItem(this.cacheEnabledKey);\r\n  }\r\n\r\n  SetEnabled(isEnabled: boolean) {\r\n    if (isEnabled) {\r\n      localStorage.setItem(this.cacheEnabledKey, 'true');\r\n    } else {\r\n      localStorage.removeItem(this.cacheEnabledKey);\r\n    }\r\n  }\r\n\r\n  public get log() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.log.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n\r\n  public get warn() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.warn.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n\r\n  public get error() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.error.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n}\r\n","import { RAFirebaseOptions } from 'providers/options';\r\nimport { LoggerBase, LogNoOp } from './logger-base';\r\n\r\nconst LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';\r\nconst logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);\r\n\r\nconst KEY_SINGLE = 'firecosts-single-reads';\r\n\r\nexport interface IFirestoreLogger {\r\n  logDocument: (count: number) => Function;\r\n  SetEnabled: (isEnabled: boolean) => void;\r\n  ResetCount: (shouldReset: boolean) => void;\r\n}\r\n\r\nexport function MakeFirestoreLogger(\r\n  options: RAFirebaseOptions\r\n): IFirestoreLogger {\r\n  function notEnabled() {\r\n    return !options?.lazyLoading?.enabled;\r\n  }\r\n\r\n  function incrementRead(incrementBy = 1) {\r\n    const currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';\r\n    const currentCount = parseInt(currentCountRaw) || 0;\r\n    const incremented = currentCount + incrementBy;\r\n    localStorage.setItem(KEY_SINGLE, incremented + '');\r\n    return incremented;\r\n  }\r\n  function clearCache() {\r\n    localStorage.removeItem(KEY_SINGLE);\r\n  }\r\n  return {\r\n    SetEnabled(isEnabled: boolean) {\r\n      logger.SetEnabled(isEnabled);\r\n    },\r\n    ResetCount(shouldReset: boolean) {\r\n      shouldReset && clearCache();\r\n    },\r\n    logDocument(docCount: number) {\r\n      if (notEnabled()) {\r\n        return LogNoOp;\r\n      }\r\n      const count = incrementRead(docCount);\r\n      const suffix = `+${docCount} (session total=${count} documents read)`;\r\n      const boundLogFn: (...args: any) => void = logger.log.bind(\r\n        console,\r\n        suffix\r\n      );\r\n      return boundLogFn;\r\n    },\r\n  };\r\n}\r\n","import { LoggerBase } from './logger-base';\r\n\r\nconst LOGGER_ENABLEDKEY = 'LOGGING_ENABLED';\r\nexport const logger = new LoggerBase('ðŸ”¥raf:', LOGGER_ENABLEDKEY);\r\n\r\nexport const log = logger.log;\r\nexport const logError = logger.error;\r\nexport const logWarn = logger.warn;\r\n","import { log } from './logger';\r\n\r\nexport type DispatchEvent =\r\n  | 'FILE_UPLOAD_WILL_START'\r\n  | 'FILE_UPLOAD_PROGRESS'\r\n  | 'FILE_UPLOAD_PAUSED'\r\n  | 'FILE_UPLOAD_RUNNING'\r\n  | 'FILE_UPLOAD_CANCELED'\r\n  | 'FILE_UPLOAD_COMPLETE'\r\n  | 'FILE_SAVED';\r\n\r\nexport function dispatch(\r\n  eventName: DispatchEvent,\r\n  fileName: string,\r\n  data?: any\r\n): void {\r\n  const eventMonitor = document.getElementById('eventMonitor');\r\n  if (!eventMonitor) {\r\n    log(\r\n      `eventMonitor not found to dispatch event ${eventName} for ${fileName}`\r\n    );\r\n    return;\r\n  }\r\n  const eventData = { fileName, data };\r\n  let event = new CustomEvent(eventName, { detail: eventData });\r\n  eventMonitor.dispatchEvent(event);\r\n}\r\n","export const REF_INDENTIFIER = '___REF_FULLPATH_';\r\n\r\nexport interface ParsedRefDoc {\r\n  ___refpath: string;\r\n  ___refid: string;\r\n}\r\n","import { getDownloadURL, ref } from 'firebase/storage';\r\nimport { has, set } from 'lodash';\r\nimport { IFirebaseWrapper } from 'providers/database';\r\nimport { FireStoreDocumentRef } from './firebase-models';\r\nimport { REF_INDENTIFIER } from './internal.models';\r\nimport { logError } from './logger';\r\n\r\nexport interface RefDocFound {\r\n  fieldPath: string;\r\n  refDocPath: string;\r\n}\r\n\r\nexport interface FromFirestoreResult {\r\n  parsedDoc: any;\r\n  refdocs: RefDocFound[];\r\n}\r\n\r\nexport function translateDocFromFirestore(obj: any) {\r\n  const isObject = !!obj && typeof obj === 'object';\r\n  const result: FromFirestoreResult = {\r\n    parsedDoc: {},\r\n    refdocs: [],\r\n  };\r\n  if (!isObject) {\r\n    return result;\r\n  }\r\n  Object.keys(obj).map((key) => {\r\n    const value = obj[key];\r\n    obj[key] = recusivelyCheckObjectValue(value, key, result);\r\n  });\r\n  result.parsedDoc = obj;\r\n  return result;\r\n}\r\n\r\nexport function recusivelyCheckObjectValue(\r\n  input: any,\r\n  fieldPath: string,\r\n  result: FromFirestoreResult\r\n): any {\r\n  const isFalsey = !input;\r\n  if (isFalsey) {\r\n    return input;\r\n  }\r\n  const isPrimitive = typeof input !== 'object';\r\n  if (isPrimitive) {\r\n    return input;\r\n  }\r\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\r\n  if (isTimestamp) {\r\n    return input.toDate();\r\n  }\r\n  const isArray = Array.isArray(input);\r\n  if (isArray) {\r\n    return (input as any[]).map((value, index) =>\r\n      recusivelyCheckObjectValue(value, `${fieldPath}.${index}`, result)\r\n    );\r\n  }\r\n  const isDocumentReference = isInputADocReference(input);\r\n  if (isDocumentReference) {\r\n    const documentReference = input as FireStoreDocumentRef;\r\n    result.refdocs.push({\r\n      fieldPath: fieldPath,\r\n      refDocPath: documentReference.path,\r\n    });\r\n    return documentReference.id;\r\n  }\r\n  const isObject = typeof input === 'object';\r\n  if (isObject) {\r\n    Object.keys(input).map((key) => {\r\n      const value = input[key];\r\n      input[key] = recusivelyCheckObjectValue(value, key, result);\r\n    });\r\n    return input;\r\n  }\r\n  return input;\r\n}\r\n\r\nfunction isInputADocReference(input: any): boolean {\r\n  const isDocumentReference =\r\n    typeof input.id === 'string' &&\r\n    typeof input.firestore === 'object' &&\r\n    typeof input.parent === 'object' &&\r\n    typeof input.path === 'string';\r\n  return isDocumentReference;\r\n}\r\n\r\nexport function applyRefDocs(doc: any, refDocs: RefDocFound[]) {\r\n  refDocs.map((d) => {\r\n    set(doc, REF_INDENTIFIER + d.fieldPath, d.refDocPath);\r\n  });\r\n  return doc;\r\n}\r\n\r\nexport const recursivelyMapStorageUrls = async (\r\n  fireWrapper: IFirebaseWrapper,\r\n  fieldValue: any\r\n): Promise<any> => {\r\n  const isPrimitive = !fieldValue || typeof fieldValue !== 'object';\r\n  if (isPrimitive) {\r\n    return fieldValue;\r\n  }\r\n  const isFileField = has(fieldValue, 'src');\r\n  if (isFileField) {\r\n    try {\r\n      const src = await getDownloadURL(\r\n        ref(fireWrapper.storage(), fieldValue.src)\r\n      );\r\n      return {\r\n        ...fieldValue,\r\n        src,\r\n      };\r\n    } catch (error) {\r\n      logError(`Error when getting download URL`, {\r\n        error,\r\n      });\r\n      return fieldValue;\r\n    }\r\n  }\r\n  const isArray = Array.isArray(fieldValue);\r\n  if (isArray) {\r\n    return Promise.all(\r\n      (fieldValue as any[]).map(async (value, index) => {\r\n        fieldValue[index] = await recursivelyMapStorageUrls(fireWrapper, value);\r\n      })\r\n    );\r\n  }\r\n  const isDocumentReference = isInputADocReference(fieldValue);\r\n  if (isDocumentReference) {\r\n    return fieldValue;\r\n  }\r\n  const isObject = !isArray && typeof fieldValue === 'object';\r\n  if (isObject) {\r\n    return Promise.all(\r\n      Object.keys(fieldValue).map(async (key) => {\r\n        const value = fieldValue[key];\r\n        fieldValue[key] = await recursivelyMapStorageUrls(fireWrapper, value);\r\n      })\r\n    );\r\n  }\r\n};\r\n","import {\r\n  FireStoreDocumentSnapshot,\r\n  FireStoreQueryDocumentSnapshot,\r\n} from './firebase-models';\r\nimport { logWarn } from './logger';\r\nimport * as ra from './react-admin-models';\r\nimport {\r\n  applyRefDocs,\r\n  translateDocFromFirestore,\r\n} from './translate-from-firestore';\r\n\r\nexport function parseFireStoreDocument<T extends ra.Record>(\r\n  doc: FireStoreQueryDocumentSnapshot | FireStoreDocumentSnapshot | undefined\r\n): T {\r\n  if (!doc) {\r\n    logWarn('parseFireStoreDocument: no doc', { doc });\r\n    return {} as T;\r\n  }\r\n  const data = doc.data();\r\n  const result = translateDocFromFirestore(data);\r\n  const dataWithRefs = applyRefDocs(result.parsedDoc, result.refdocs);\r\n  // React Admin requires an id field on every document,\r\n  // So we can just use the firestore document id\r\n  return { id: doc.id, ...dataWithRefs } as T;\r\n}\r\n","import path from 'path-browserify';\r\n\r\nexport function getAbsolutePath(\r\n  rootRef: undefined | string | (() => string),\r\n  relativePath: string | null\r\n): string {\r\n  if (!rootRef) {\r\n    return relativePath + '';\r\n  }\r\n  if (!relativePath) {\r\n    throw new Error(\r\n      'Resource name must be a string of length greater than 0 characters'\r\n    );\r\n  }\r\n  const rootRefValue = typeof rootRef === 'string' ? rootRef : rootRef();\r\n  const withSlashes = path.join('/', rootRefValue, '/', relativePath, '/');\r\n  const slashCount = withSlashes.split('/').length - 1;\r\n  if (slashCount % 2) {\r\n    throw new Error(`The rootRef path must point to a \"document\"\r\n    not a \"collection\"e.g. /collection/document/ or\r\n    /collection/document/collection/document/`);\r\n  }\r\n  return withSlashes.slice(1, -1);\r\n}\r\n\r\nexport function joinPaths(...args: string[]) {\r\n  return path.join(...args);\r\n}\r\n","import { REF_INDENTIFIER } from './internal.models';\r\n\r\ninterface ParsedUpload {\r\n  fieldDotsPath: string;\r\n  fieldSlashesPath: string;\r\n  rawFile: File | any;\r\n}\r\n\r\ninterface ParsedDocRef {\r\n  fieldDotsPath: string;\r\n  refPath: string;\r\n}\r\n\r\ninterface ParseResult {\r\n  parsedDoc: any;\r\n  uploads: ParsedUpload[];\r\n  refdocs: ParsedDocRef[];\r\n}\r\n\r\nexport function translateDocToFirestore(obj: any): ParseResult {\r\n  const isObject = !!obj && typeof obj === 'object';\r\n  const result: ParseResult = {\r\n    uploads: [],\r\n    refdocs: [],\r\n    parsedDoc: {},\r\n  };\r\n  if (!isObject) {\r\n    return result;\r\n  }\r\n  Object.keys(obj).map((key) => {\r\n    const value = obj[key];\r\n    recusivelyParseObjectValue(value, key, result);\r\n  });\r\n  result.parsedDoc = obj;\r\n  return result;\r\n}\r\n\r\nexport function recusivelyParseObjectValue(\r\n  input: any,\r\n  fieldPath: string,\r\n  result: ParseResult\r\n): any {\r\n  const isFalsey = !input;\r\n  if (isFalsey) {\r\n    return input;\r\n  }\r\n  const isRefField =\r\n    typeof fieldPath === 'string' && fieldPath.includes(REF_INDENTIFIER);\r\n  if (isRefField) {\r\n    const refDocFullPath = input as string;\r\n    result.refdocs.push({\r\n      fieldDotsPath: fieldPath,\r\n      refPath: refDocFullPath,\r\n    });\r\n    return;\r\n  }\r\n  const isPrimitive = typeof input !== 'object';\r\n  if (isPrimitive) {\r\n    return input;\r\n  }\r\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\r\n  if (isTimestamp) {\r\n    return input.toDate();\r\n  }\r\n  const isArray = Array.isArray(input);\r\n  if (isArray) {\r\n    return (input as []).map((value, index) =>\r\n      recusivelyParseObjectValue(value, `${fieldPath}.${index}`, result)\r\n    );\r\n  }\r\n  const isFileField = !!input && input.hasOwnProperty('rawFile');\r\n  if (isFileField) {\r\n    result.uploads.push({\r\n      fieldDotsPath: fieldPath,\r\n      fieldSlashesPath: fieldPath.split('.').join('/'),\r\n      rawFile: input.rawFile,\r\n    });\r\n    delete input.rawFile;\r\n    return;\r\n  }\r\n  Object.keys(input).map((key) => {\r\n    const value = input[key];\r\n    recusivelyParseObjectValue(value, `${fieldPath}.${key}`, result);\r\n  });\r\n  return input;\r\n}\r\n","import { FirebaseApp, getApp, getApps, initializeApp } from 'firebase/app';\r\nimport {\r\n  browserLocalPersistence,\r\n  browserSessionPersistence,\r\n  getAuth,\r\n  inMemoryPersistence,\r\n  onAuthStateChanged,\r\n  Persistence,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth';\r\nimport {\r\n  collection,\r\n  doc,\r\n  getFirestore,\r\n  serverTimestamp as firestoreServerTimestamp,\r\n  writeBatch,\r\n} from 'firebase/firestore';\r\nimport {\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n} from 'firebase/storage';\r\nimport {\r\n  FireApp,\r\n  FireAuth,\r\n  FireAuthUserCredentials,\r\n  FireStorage,\r\n  FireStoragePutFileResult,\r\n  FireStore,\r\n  FireStoreBatch,\r\n  FireStoreCollectionRef,\r\n  FireUploadTaskSnapshot,\r\n  FireUser,\r\n} from 'misc/firebase-models';\r\nimport { log } from '../../../misc';\r\nimport { RAFirebaseOptions } from '../../options';\r\nimport { IFirebaseWrapper } from './IFirebaseWrapper';\r\n\r\nexport class FirebaseWrapper implements IFirebaseWrapper {\r\n  private readonly _app: FireApp;\r\n  private readonly _firestore: FireStore;\r\n  private readonly _storage: FireStorage;\r\n  private readonly _auth: FireAuth;\r\n  public options: RAFirebaseOptions;\r\n\r\n  constructor(inputOptions: RAFirebaseOptions | undefined, firebaseConfig: {}) {\r\n    const optionsSafe = inputOptions || {};\r\n    this.options = optionsSafe;\r\n    this._app = (window as any)['_app'] = ObtainFirebaseApp(\r\n      firebaseConfig,\r\n      optionsSafe\r\n    );\r\n    this._firestore = getFirestore(this._app);\r\n    this._storage = getStorage(this._app);\r\n    this._auth = getAuth(this._app);\r\n  }\r\n  dbGetCollection(absolutePath: string): FireStoreCollectionRef {\r\n    return collection(this._firestore, absolutePath);\r\n  }\r\n  dbCreateBatch(): FireStoreBatch {\r\n    return writeBatch(this._firestore);\r\n  }\r\n  dbMakeNewId(): string {\r\n    return doc(collection(this._firestore, 'collections')).id;\r\n  }\r\n\r\n  public OnUserLogout(callBack: (u: FireUser | null) => any) {\r\n    this._auth.onAuthStateChanged((user) => {\r\n      const isLoggedOut = !user;\r\n      log('FirebaseWrapper.OnUserLogout', { user, isLoggedOut });\r\n      if (isLoggedOut) {\r\n        callBack(user);\r\n      }\r\n    });\r\n  }\r\n  putFile(storagePath: string, rawFile: any): FireStoragePutFileResult {\r\n    const task = uploadBytesResumable(ref(this._storage, storagePath), rawFile);\r\n    const taskResult = new Promise<FireUploadTaskSnapshot>((res, rej) =>\r\n      task.then(res).catch(rej)\r\n    );\r\n\r\n    const downloadUrl = taskResult\r\n      .then((t) => getDownloadURL(t.ref))\r\n      .then((url) => url as string);\r\n\r\n    return {\r\n      task,\r\n      taskResult,\r\n      downloadUrl,\r\n    };\r\n  }\r\n  async getStorageDownloadUrl(fieldSrc: string): Promise<string> {\r\n    return getDownloadURL(ref(this._storage, fieldSrc));\r\n  }\r\n  public serverTimestamp() {\r\n    // This line doesn't work for some reason, might be firebase sdk.\r\n    return firestoreServerTimestamp();\r\n  }\r\n\r\n  async authSetPersistence(persistenceInput: 'session' | 'local' | 'none') {\r\n    let persistenceResolved: Persistence;\r\n    switch (persistenceInput) {\r\n      case 'local':\r\n        persistenceResolved = browserLocalPersistence;\r\n        break;\r\n      case 'none':\r\n        persistenceResolved = inMemoryPersistence;\r\n        break;\r\n      case 'session':\r\n      default:\r\n        persistenceResolved = browserSessionPersistence;\r\n        break;\r\n    }\r\n\r\n    log('setPersistence', { persistenceInput, persistenceResolved });\r\n\r\n    return this._auth\r\n      .setPersistence(persistenceResolved)\r\n      .catch((error) => console.error(error));\r\n  }\r\n  async authSigninEmailPassword(\r\n    email: string,\r\n    password: string\r\n  ): Promise<FireAuthUserCredentials> {\r\n    const user = await signInWithEmailAndPassword(this._auth, email, password);\r\n    return user;\r\n  }\r\n  async authSignOut(): Promise<void> {\r\n    return signOut(this._auth);\r\n  }\r\n  async authGetUserLoggedIn(): Promise<FireUser> {\r\n    return new Promise((resolve, reject) => {\r\n      const auth = this._auth;\r\n      if (auth.currentUser) return resolve(auth.currentUser);\r\n      const unsubscribe = onAuthStateChanged(this._auth, (user) => {\r\n        unsubscribe();\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  public async GetUserLogin(): Promise<FireUser> {\r\n    return this.authGetUserLoggedIn();\r\n  }\r\n\r\n  /** @deprecated */\r\n  public auth(): FireAuth {\r\n    return this._auth;\r\n  }\r\n  /** @deprecated */\r\n  public storage(): FireStorage {\r\n    return this._storage;\r\n  }\r\n  /** @deprecated */\r\n  public GetApp(): FireApp {\r\n    return this._app;\r\n  }\r\n  /** @deprecated */\r\n  public db(): FireStore {\r\n    return this._firestore;\r\n  }\r\n}\r\n\r\nfunction ObtainFirebaseApp(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n): FirebaseApp {\r\n  if (options.app) {\r\n    return options.app;\r\n  }\r\n  const apps = getApps();\r\n\r\n  const isInitialized = !!apps?.length;\r\n\r\n  if (isInitialized) {\r\n    return getApp();\r\n  } else {\r\n    return initializeApp(firebaseConfig);\r\n  }\r\n}\r\n","import { log, logger, logWarn, retrieveStatusTxt } from '../misc';\r\nimport { FireUser } from '../misc/firebase-models';\r\nimport {\r\n  AuthProvider as RaAuthProvider,\r\n  UserIdentity,\r\n} from '../misc/react-admin-models';\r\nimport { messageTypes } from './../misc/messageTypes';\r\nimport { IFirebaseWrapper } from './database';\r\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\r\nimport { RAFirebaseOptions } from './options';\r\n\r\nclass AuthClient {\r\n  private fireWrapper: IFirebaseWrapper;\r\n\r\n  constructor(firebaseConfig: {}, optionsInput?: RAFirebaseOptions) {\r\n    const options = optionsInput || {};\r\n    log('Auth Client: initializing...', { firebaseConfig, options });\r\n    this.fireWrapper = new FirebaseWrapper(options, firebaseConfig);\r\n    options.persistence && this.setPersistence(options.persistence);\r\n  }\r\n\r\n  setPersistence(persistenceInput: 'session' | 'local' | 'none') {\r\n    return this.fireWrapper.authSetPersistence(persistenceInput);\r\n  }\r\n\r\n  public async HandleAuthLogin(params: { username: string; password: string }) {\r\n    const { username, password } = params;\r\n\r\n    if (username && password) {\r\n      try {\r\n        const user = await this.fireWrapper.authSigninEmailPassword(\r\n          username,\r\n          password\r\n        );\r\n        log('HandleAuthLogin: user sucessfully logged in', { user });\r\n        return user;\r\n      } catch (e) {\r\n        log('HandleAuthLogin: invalid credentials', { params });\r\n        throw new Error('Login error: invalid credentials');\r\n      }\r\n    } else {\r\n      return this.getUserLogin();\r\n    }\r\n  }\r\n\r\n  public HandleAuthLogout() {\r\n    return this.fireWrapper.authSignOut();\r\n  }\r\n\r\n  public HandleAuthError(errorHttp: messageTypes.HttpErrorType) {\r\n    log('HandleAuthLogin: invalid credentials', { errorHttp });\r\n    const status = !!errorHttp && errorHttp.status;\r\n    const statusTxt = retrieveStatusTxt(status);\r\n    if (statusTxt === 'ok') {\r\n      log('API is actually authenticated');\r\n      return Promise.resolve();\r\n    }\r\n    logWarn('Received authentication error from API');\r\n    return Promise.reject();\r\n  }\r\n\r\n  public async HandleAuthCheck(): Promise<any> {\r\n    return this.getUserLogin();\r\n  }\r\n\r\n  public getUserLogin(): Promise<FireUser> {\r\n    return this.fireWrapper.authGetUserLoggedIn();\r\n  }\r\n\r\n  public async HandleGetPermissions() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.claims;\r\n    } catch (e) {\r\n      log('HandleGetPermission: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetIdentity(): Promise<UserIdentity> {\r\n    try {\r\n      const { uid, displayName, photoURL } = await this.getUserLogin();\r\n      const identity: UserIdentity = {\r\n        id: uid,\r\n        fullName: `${displayName ?? ''}`,\r\n        avatar: `${photoURL ?? ''}`,\r\n      };\r\n      return identity;\r\n    } catch (e) {\r\n      log('HandleGetIdentity: no user is logged in', {\r\n        e,\r\n      });\r\n      return null as any;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTAuthTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.authTime;\r\n    } catch (e) {\r\n      log('HandleGetJWTAuthTime: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTExpirationTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.expirationTime;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTExpirationTime: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTSignInProvider() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.signInProvider;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTSignInProvider: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTIssuedAtTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.issuedAtTime;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTToken() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.token;\r\n    } catch (e) {\r\n      log('HandleGetJWTToken: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport function AuthProvider(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n): ReactAdminFirebaseAuthProvider {\r\n  VerifyAuthProviderArgs(firebaseConfig, options);\r\n  logger.SetEnabled(!!options?.logging);\r\n  const auth = new AuthClient(firebaseConfig, options);\r\n\r\n  const provider: ReactAdminFirebaseAuthProvider = {\r\n    // React Admin Interface\r\n    login: (params) => auth.HandleAuthLogin(params),\r\n    logout: () => auth.HandleAuthLogout(),\r\n    checkAuth: () => auth.HandleAuthCheck(),\r\n    checkError: (error) => auth.HandleAuthError(error),\r\n    getPermissions: () => auth.HandleGetPermissions(),\r\n    getIdentity: () => auth.HandleGetIdentity(),\r\n    // Custom Functions\r\n    getAuthUser: () => auth.getUserLogin(),\r\n    getJWTAuthTime: () => auth.HandleGetJWTAuthTime(),\r\n    getJWTExpirationTime: () => auth.HandleGetJWTExpirationTime(),\r\n    getJWTSignInProvider: () => auth.HandleGetJWTSignInProvider(),\r\n    getJWTClaims: () => auth.HandleGetPermissions(),\r\n    getJWTToken: () => auth.HandleGetJWTToken(),\r\n  };\r\n  return provider;\r\n}\r\n\r\nexport type ReactAdminFirebaseAuthProvider = RaAuthProvider & {\r\n  // Custom Functions\r\n  getAuthUser: () => Promise<FireUser>;\r\n  getJWTAuthTime: () => Promise<string | null>;\r\n  getJWTExpirationTime: () => Promise<string | null>;\r\n  getJWTSignInProvider: () => Promise<string | null>;\r\n  getJWTClaims: () => Promise<{ [key: string]: any } | null>;\r\n  getJWTToken: () => Promise<string | null>;\r\n};\r\n\r\nfunction VerifyAuthProviderArgs(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n) {\r\n  const hasNoApp = !options || !options.app;\r\n  const hasNoConfig = !firebaseConfig;\r\n  if (hasNoConfig && hasNoApp) {\r\n    throw new Error(\r\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\r\n    );\r\n  }\r\n}\r\n","// From firebase SDK\r\n\r\nimport { logError } from './logger';\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\r\nexport function retrieveStatusTxt(status: number): 'ok' | 'unauthenticated' {\r\n  // Make sure any successful status is OK.\r\n  if (status >= 200 && status < 300) {\r\n    return 'ok';\r\n  }\r\n  switch (status) {\r\n    case 401: // 'unauthenticated'\r\n    case 403: // 'permission-denied'\r\n      return 'unauthenticated';\r\n\r\n    case 0: // 'internal'\r\n    case 400: // 'invalid-argument'\r\n    case 404: // 'not-found'\r\n    case 409: // 'aborted'\r\n    case 429: // 'resource-exhausted'\r\n    case 499: // 'cancelled'\r\n    case 500: // 'internal'\r\n    case 501: // 'unimplemented'\r\n    case 503: // 'unavailable'\r\n    case 504: // 'deadline-exceeded'\r\n    default:\r\n      // ignore\r\n      return 'ok';\r\n  }\r\n}\r\n\r\n// From firebase SDK\r\n// tslint:disable-next-line:max-line-length\r\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\r\nexport function retrieveStatusCode(statusTxt: string): number {\r\n  // Make sure any successful status is OK.\r\n  const regexResult = /\\[code\\=([\\w-]*)/g.exec(statusTxt);\r\n  const status = Array.isArray(regexResult) && regexResult[1];\r\n  if (!status) {\r\n    logError('unknown StatusCode ', { statusTxt });\r\n  }\r\n  switch (status) {\r\n    case 'unauthenticated':\r\n      return 401;\r\n    case 'permission-denied':\r\n      return 403;\r\n    case 'internal':\r\n      return 0;\r\n    case 'invalid-argument':\r\n      return 400;\r\n    case 'not-found':\r\n      return 404;\r\n    case 'aborted':\r\n      return 409;\r\n    case 'resource-exhausted':\r\n      return 429;\r\n    case 'cancelled':\r\n      return 499;\r\n    case 'internal':\r\n      return 500;\r\n    case 'unimplemented':\r\n      return 501;\r\n    case 'unavailable':\r\n      return 503;\r\n    case 'deadline-exceeded':\r\n      return 504;\r\n    default:\r\n      return 200;\r\n  }\r\n}\r\n","import { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function Create<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.CreateParams,\r\n  client: FireClient\r\n): Promise<ra.CreateResult<T>> {\r\n  const { rm, fireWrapper } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('Create', { resourceName, resource: r, params });\r\n  const hasOverridenDocId = params.data && params.data.id;\r\n  log('Create', { hasOverridenDocId });\r\n  if (hasOverridenDocId) {\r\n    const overridenId = params.data.id;\r\n    const exists = (await getDoc(doc(r.collection, overridenId))).exists();\r\n    if (exists) {\r\n      throw new Error(\r\n        `the id:\"${overridenId}\" already exists, please use a unique string if overriding the 'id' field`\r\n      );\r\n    }\r\n\r\n    const createData = await client.parseDataAndUpload(\r\n      r,\r\n      overridenId,\r\n      params.data\r\n    );\r\n    if (!overridenId) {\r\n      throw new Error('id must be a valid string');\r\n    }\r\n    const createDocObj = { ...createData };\r\n    client.checkRemoveIdField(createDocObj, overridenId);\r\n    await client.addCreatedByFields(createDocObj);\r\n    await client.addUpdatedByFields(createDocObj);\r\n    const createDocObjTransformed = client.transformToDb(\r\n      resourceName,\r\n      createDocObj,\r\n      overridenId\r\n    );\r\n    log('Create', { docObj: createDocObj });\r\n    await setDoc(doc(r.collection, overridenId), createDocObjTransformed, {\r\n      merge: false,\r\n    });\r\n    return {\r\n      data: {\r\n        ...createDocObjTransformed,\r\n        id: overridenId,\r\n      },\r\n    };\r\n  }\r\n  const newId = fireWrapper.dbMakeNewId();\r\n  const data = await client.parseDataAndUpload(r, newId, params.data);\r\n  const docObj = { ...data };\r\n  client.checkRemoveIdField(docObj, newId);\r\n  await client.addCreatedByFields(docObj);\r\n  await client.addUpdatedByFields(docObj);\r\n  const docObjTransformed = client.transformToDb(resourceName, docObj, newId);\r\n  await setDoc(doc(r.collection, newId), docObjTransformed, { merge: false });\r\n  return {\r\n    data: {\r\n      ...docObjTransformed,\r\n      id: newId,\r\n    },\r\n  };\r\n}\r\n","import { deleteDoc, doc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\nimport { DeleteSoft } from './Delete.Soft';\r\n\r\nexport async function Delete<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.DeleteParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteResult<T>> {\r\n  const { rm, options } = client;\r\n  if (options.softDelete) {\r\n    return DeleteSoft(resourceName, params, client);\r\n  }\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('apiDelete', { resourceName, resource: r, params });\r\n  try {\r\n    const id = params.id + '';\r\n\r\n    await deleteDoc(doc(r.collection, id));\r\n  } catch (error) {\r\n    throw new Error(error as any);\r\n  }\r\n  return {\r\n    data: params.previousData as T,\r\n  };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log, logError } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function DeleteSoft<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.DeleteParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteResult<T>> {\r\n  const { rm } = client;\r\n  const id = params.id + '';\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteSoft', { resourceName, resource: r, params });\r\n  const docObj = { deleted: true };\r\n  await client.addUpdatedByFields(docObj);\r\n\r\n  updateDoc(doc(r.collection, id), docObj).catch((error) => {\r\n    logError('DeleteSoft error', { error });\r\n  });\r\n\r\n  return {\r\n    data: params.previousData as T,\r\n  };\r\n}\r\n","import { doc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\nimport { DeleteManySoft } from './DeleteMany.Soft';\r\n\r\nexport async function DeleteMany(\r\n  resourceName: string,\r\n  params: ra.DeleteManyParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteManyResult> {\r\n  const { options, rm, fireWrapper } = client;\r\n  if (options.softDelete) {\r\n    return DeleteManySoft(resourceName, params, client);\r\n  }\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteMany', { resourceName, resource: r, params });\r\n  const returnData: ra.Identifier[] = [];\r\n  const batch = fireWrapper.dbCreateBatch();\r\n  for (const id of params.ids) {\r\n    const idStr = id + '';\r\n    const docToDelete = doc(r.collection, idStr);\r\n    batch.delete(docToDelete);\r\n    returnData.push(id);\r\n  }\r\n\r\n  try {\r\n    await batch.commit();\r\n  } catch (error) {\r\n    throw new Error(error as any);\r\n  }\r\n  return { data: returnData };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log, logError } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function DeleteManySoft(\r\n  resourceName: string,\r\n  params: ra.DeleteManyParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteManyResult> {\r\n  const { rm } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteManySoft', { resourceName, resource: r, params });\r\n  const ids = params.ids;\r\n  const returnData = await Promise.all(\r\n    ids.map(async (id) => {\r\n      const idStr = id + '';\r\n      const docObj = { deleted: true };\r\n      await client.addUpdatedByFields(docObj);\r\n      updateDoc(doc(r.collection, idStr), docObj).catch((error) => {\r\n        logError('apiSoftDeleteMany error', { error });\r\n      });\r\n      return idStr;\r\n    })\r\n  );\r\n  return {\r\n    data: returnData,\r\n  };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function Update<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.UpdateParams,\r\n  client: FireClient\r\n): Promise<ra.UpdateResult<T>> {\r\n  const { rm } = client;\r\n  log('Update', { resourceName, params });\r\n  const id = params.id + '';\r\n  delete params.data.id;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('Update', { resourceName, resource: r, params });\r\n  const data = await client.parseDataAndUpload(r, id, params.data);\r\n  const docObj = { ...data };\r\n  client.checkRemoveIdField(docObj, id);\r\n  await client.addUpdatedByFields(docObj);\r\n  const docObjTransformed = client.transformToDb(resourceName, docObj, id);\r\n  await updateDoc(doc(r.collection, id), docObjTransformed);\r\n  return {\r\n    data: {\r\n      ...data,\r\n      id: id,\r\n    },\r\n  };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function UpdateMany(\r\n  resourceName: string,\r\n  params: ra.UpdateManyParams,\r\n  client: FireClient\r\n): Promise<ra.UpdateManyResult> {\r\n  const { rm } = client;\r\n  log('UpdateMany', { resourceName, params });\r\n  delete params.data.id;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('UpdateMany', { resourceName, resource: r, params });\r\n  const ids = params.ids;\r\n  const returnData = await Promise.all(\r\n    ids.map(async (id) => {\r\n      const idStr = id + '';\r\n      const data = await client.parseDataAndUpload(r, idStr, params.data);\r\n      const docObj = { ...data };\r\n      client.checkRemoveIdField(docObj, idStr);\r\n      await client.addUpdatedByFields(docObj);\r\n      const docObjTransformed = client.transformToDb(\r\n        resourceName,\r\n        docObj,\r\n        idStr\r\n      );\r\n      await updateDoc(doc(r.collection, idStr), docObjTransformed);\r\n      return {\r\n        ...data,\r\n        id: idStr,\r\n      };\r\n    })\r\n  );\r\n  return {\r\n    data: returnData,\r\n  };\r\n}\r\n","import { doc, getDoc, getDocs } from 'firebase/firestore';\r\nimport { FireStoreCollectionRef, FireStoreQuery } from 'misc/firebase-models';\r\nimport {\r\n  getAbsolutePath,\r\n  IFirestoreLogger,\r\n  log,\r\n  logWarn,\r\n  messageTypes,\r\n  parseFireStoreDocument,\r\n} from '../../misc';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\r\n\r\ntype IResourceItem = {} & { id: string; deleted?: boolean };\r\nexport interface IResource {\r\n  path: string;\r\n  pathAbsolute: string;\r\n  collection: FireStoreCollectionRef;\r\n  list: Array<IResourceItem>;\r\n}\r\n\r\nexport class ResourceManager {\r\n  private resources: Record<string, IResource> = {};\r\n\r\n  constructor(\r\n    private fireWrapper: IFirebaseWrapper,\r\n    private options: RAFirebaseOptions,\r\n    private flogger: IFirestoreLogger\r\n  ) {\r\n    this.fireWrapper.OnUserLogout(() => {\r\n      this.resources = {};\r\n    });\r\n  }\r\n\r\n  public async TryGetResource(\r\n    resourceName: string,\r\n    refresh?: 'REFRESH',\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    if (refresh) {\r\n      await this.RefreshResource(resourceName, collectionQuery);\r\n    }\r\n    return this.TryGetResourcePromise(resourceName, collectionQuery);\r\n  }\r\n\r\n  public GetResource(relativePath: string): IResource {\r\n    const resource: IResource = this.resources[relativePath];\r\n    if (!resource) {\r\n      throw new Error(\r\n        `react-admin-firebase: Can't find resource: \"${relativePath}\"`\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  public async TryGetResourcePromise(\r\n    relativePath: string,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    log('resourceManager.TryGetResourcePromise', {\r\n      relativePath,\r\n      collectionQuery,\r\n    });\r\n    await this.initPath(relativePath);\r\n\r\n    const resource: IResource = this.resources[relativePath];\r\n    if (!resource) {\r\n      throw new Error(\r\n        `react-admin-firebase: Cant find resource: \"${relativePath}\"`\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  public async RefreshResource(\r\n    relativePath: string,\r\n    collectionQuery: messageTypes.CollectionQueryType | undefined\r\n  ) {\r\n    if (this.options?.lazyLoading?.enabled) {\r\n      logWarn('resourceManager.RefreshResource', {\r\n        warn: 'RefreshResource is not available in lazy loading mode',\r\n      });\r\n      throw new Error(\r\n        'react-admin-firebase: RefreshResource is not available in lazy loading mode'\r\n      );\r\n    }\r\n\r\n    log('resourceManager.RefreshResource', { relativePath, collectionQuery });\r\n    await this.initPath(relativePath);\r\n    const resource = this.resources[relativePath];\r\n\r\n    const collectionRef = resource.collection;\r\n    const collectionOrQuery = this.applyQuery(collectionRef, collectionQuery);\r\n    const newDocs = await getDocs(collectionOrQuery);\r\n\r\n    newDocs.forEach((d) =>\r\n      resource.list.push(parseFireStoreDocument<IResourceItem>(d))\r\n    );\r\n\r\n    const count = newDocs.docs.length;\r\n    this.flogger.logDocument(count)();\r\n    log('resourceManager.RefreshResource', {\r\n      newDocs,\r\n      resource,\r\n      collectionPath: collectionRef.path,\r\n    });\r\n  }\r\n\r\n  public async GetSingleDoc(relativePath: string, docId: string) {\r\n    await this.initPath(relativePath);\r\n    const resource = this.GetResource(relativePath);\r\n    this.flogger.logDocument(1)();\r\n    const docSnap = await getDoc(doc(resource.collection, docId));\r\n    if (!docSnap.exists) {\r\n      throw new Error('react-admin-firebase: No id found matching: ' + docId);\r\n    }\r\n    const result = parseFireStoreDocument(docSnap);\r\n    log('resourceManager.GetSingleDoc', {\r\n      relativePath,\r\n      resource,\r\n      docId,\r\n      docSnap,\r\n      result,\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private async initPath(relativePath: string): Promise<void> {\r\n    const rootRef = this.options && this.options.rootRef;\r\n    const absolutePath = getAbsolutePath(rootRef, relativePath);\r\n    const hasBeenInited = !!this.resources[relativePath];\r\n    log('resourceManager.initPath()', {\r\n      absolutePath,\r\n      hasBeenInited,\r\n    });\r\n    if (hasBeenInited) {\r\n      log('resourceManager.initPath() has been initialized already...');\r\n      return;\r\n    }\r\n    const collection = this.fireWrapper.dbGetCollection(absolutePath);\r\n    const list: Array<IResourceItem> = [];\r\n    const resource: IResource = {\r\n      collection,\r\n      list,\r\n      path: relativePath,\r\n      pathAbsolute: absolutePath,\r\n    };\r\n    this.resources[relativePath] = resource;\r\n    log('resourceManager.initPath() setting resource...', {\r\n      resource,\r\n      allResources: this.resources,\r\n      collection: collection,\r\n      collectionPath: collection.path,\r\n    });\r\n  }\r\n\r\n  public async getUserIdentifier(): Promise<string> {\r\n    const identifier = this.options.associateUsersById\r\n      ? await this.getCurrentUserId()\r\n      : await this.getCurrentUserEmail();\r\n    return identifier;\r\n  }\r\n\r\n  private async getCurrentUserEmail() {\r\n    const user = await this.fireWrapper.authGetUserLoggedIn();\r\n    if (user) {\r\n      return user.email as string;\r\n    } else {\r\n      return 'annonymous user';\r\n    }\r\n  }\r\n  private async getCurrentUserId() {\r\n    const user = await this.fireWrapper.authGetUserLoggedIn();\r\n    if (user) {\r\n      return user.uid;\r\n    } else {\r\n      return 'annonymous user';\r\n    }\r\n  }\r\n\r\n  private applyQuery(\r\n    collection: FireStoreCollectionRef,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): FireStoreCollectionRef | FireStoreQuery {\r\n    const collRef = collectionQuery ? collectionQuery(collection) : collection;\r\n\r\n    log('resourceManager.applyQuery() ...', {\r\n      collection,\r\n      collectionQuery: (collectionQuery || '-').toString(),\r\n      collRef,\r\n    });\r\n    return collRef;\r\n  }\r\n}\r\n","import { doc } from 'firebase/firestore';\r\nimport { get, set } from 'lodash';\r\nimport {\r\n  AddCreatedByFields,\r\n  AddUpdatedByFields,\r\n  dispatch,\r\n  IFirestoreLogger,\r\n  log,\r\n  logError,\r\n  parseStoragePath,\r\n  translateDocToFirestore,\r\n} from '../../misc';\r\nimport {\r\n  TASK_CANCELED,\r\n  TASK_PAUSED,\r\n  TASK_RUNNING,\r\n} from '../../misc/firebase-models';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\r\nimport { IResource, ResourceManager } from './ResourceManager';\r\n\r\nexport class FireClient {\r\n  public rm: ResourceManager;\r\n\r\n  constructor(\r\n    public fireWrapper: IFirebaseWrapper,\r\n    public options: RAFirebaseOptions,\r\n    public flogger: IFirestoreLogger\r\n  ) {\r\n    this.rm = new ResourceManager(this.fireWrapper, this.options, this.flogger);\r\n  }\r\n\r\n  public checkRemoveIdField(obj: any, docId: string) {\r\n    if (!this.options.dontAddIdFieldToDoc) {\r\n      obj.id = docId;\r\n    }\r\n  }\r\n\r\n  public transformToDb(\r\n    resourceName: string,\r\n    documentData: any,\r\n    docId: string\r\n  ): any {\r\n    if (typeof this.options.transformToDb === 'function') {\r\n      return this.options.transformToDb(resourceName, documentData, docId);\r\n    }\r\n    return documentData;\r\n  }\r\n\r\n  public async parseDataAndUpload(r: IResource, id: string, data: any) {\r\n    if (!data) {\r\n      return data;\r\n    }\r\n    const docPath = doc(r.collection, id).path;\r\n\r\n    const result = translateDocToFirestore(data);\r\n    const uploads = result.uploads;\r\n    await Promise.all(\r\n      uploads.map(async (u) => {\r\n        const storagePath = parseStoragePath(\r\n          u.rawFile,\r\n          docPath,\r\n          u.fieldDotsPath,\r\n          !!this.options.useFileNamesInStorage\r\n        );\r\n        const link = await this.saveFile(storagePath, u.rawFile);\r\n        set(data, u.fieldDotsPath + '.src', link);\r\n      })\r\n    );\r\n    return data;\r\n  }\r\n\r\n  public async addCreatedByFields(obj: any) {\r\n    return AddCreatedByFields(obj, this.fireWrapper, this.rm, this.options);\r\n  }\r\n\r\n  public async addUpdatedByFields(obj: any) {\r\n    return AddUpdatedByFields(obj, this.fireWrapper, this.rm, this.options);\r\n  }\r\n\r\n  private async saveFile(\r\n    storagePath: string,\r\n    rawFile: any\r\n  ): Promise<string | undefined> {\r\n    log('saveFile() saving file...', { storagePath, rawFile });\r\n    try {\r\n      const { task, taskResult, downloadUrl } = this.fireWrapper.putFile(\r\n        storagePath,\r\n        rawFile\r\n      );\r\n      const { name } = rawFile;\r\n      // monitor upload status & progress\r\n      dispatch('FILE_UPLOAD_WILL_START', name);\r\n      task.on('state_changed', (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        log('Upload is ' + progress + '% done');\r\n        dispatch('FILE_UPLOAD_PROGRESS', name, progress);\r\n        switch (snapshot.state) {\r\n          case TASK_PAUSED:\r\n            log('Upload is paused');\r\n            dispatch('FILE_UPLOAD_PAUSED', name);\r\n            break;\r\n          case TASK_RUNNING:\r\n            log('Upload is running');\r\n            dispatch('FILE_UPLOAD_RUNNING', name);\r\n            break;\r\n          case TASK_CANCELED:\r\n            log('Upload has been canceled');\r\n            dispatch('FILE_UPLOAD_CANCELED', name);\r\n            break;\r\n          // case storage.TaskState.ERROR:\r\n          // already handled by catch\r\n          // case storage.TaskState.SUCCESS:\r\n          // already handled by then\r\n        }\r\n      });\r\n      const [getDownloadURL] = await Promise.all([downloadUrl, taskResult]);\r\n      dispatch('FILE_UPLOAD_COMPLETE', name);\r\n      dispatch('FILE_SAVED', name);\r\n      log('saveFile() saved file', {\r\n        storagePath,\r\n        taskResult,\r\n        getDownloadURL,\r\n      });\r\n      return this.options.relativeFilePaths ? storagePath : getDownloadURL;\r\n    } catch (storageError) {\r\n      if (get(storageError, 'code') === 'storage/unknown') {\r\n        logError(\r\n          'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage',\r\n          { storageError }\r\n        );\r\n      } else {\r\n        logError('saveFile() error saving file', {\r\n          storageError,\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { joinPaths } from './pathHelper';\r\n\r\nexport function parseStoragePath(\r\n  rawFile: File,\r\n  docPath: string,\r\n  fieldPath: string,\r\n  useFileName: boolean\r\n): string {\r\n  const fileNameBits = rawFile instanceof File ? rawFile.name.split('.') : [];\r\n\r\n  const fileExtension = !fileNameBits?.length ? '' : '.' + fileNameBits.pop();\r\n\r\n  return useFileName\r\n    ? joinPaths(docPath, fieldPath, rawFile.name)\r\n    : joinPaths(docPath, fieldPath + fileExtension);\r\n}\r\n","import { RAFirebaseOptions } from 'index';\r\nimport { IFirebaseWrapper, ResourceManager } from 'providers/database';\r\n\r\nexport async function AddCreatedByFields(\r\n  obj: any,\r\n  fireWrapper: IFirebaseWrapper,\r\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\r\n  options: Pick<\r\n    RAFirebaseOptions,\r\n    | 'associateUsersById'\r\n    | 'disableMeta'\r\n    | 'renameMetaFields'\r\n    | 'metaFieldCasing'\r\n  >\r\n) {\r\n  if (options.disableMeta) {\r\n    return;\r\n  }\r\n  const currentUserIdentifier = await rm.getUserIdentifier();\r\n  const createAtSelector = GetSelectorsCreateAt(options);\r\n  const createBySelector = GetSelectorsCreateBy(options);\r\n  obj[createAtSelector] = fireWrapper.serverTimestamp();\r\n  obj[createBySelector] = currentUserIdentifier;\r\n}\r\n\r\nexport async function AddUpdatedByFields(\r\n  obj: any,\r\n  fireWrapper: IFirebaseWrapper,\r\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\r\n  options: Pick<\r\n    RAFirebaseOptions,\r\n    | 'associateUsersById'\r\n    | 'disableMeta'\r\n    | 'renameMetaFields'\r\n    | 'metaFieldCasing'\r\n  >\r\n) {\r\n  if (options.disableMeta) {\r\n    return;\r\n  }\r\n  const currentUserIdentifier = await rm.getUserIdentifier();\r\n  const updateAtSelector = GetSelectorsUpdateAt(options);\r\n  const updateBySelector = GetSelectorsUpdateBy(options);\r\n  obj[updateAtSelector] = fireWrapper.serverTimestamp();\r\n  obj[updateBySelector] = currentUserIdentifier;\r\n}\r\n\r\nexport function GetSelectorsUpdateAt(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.updated_at) {\r\n    return options.renameMetaFields.updated_at;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'lastupdate';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'lastUpdate';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'last_update';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'LastUpdate';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'last-update';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsUpdateBy(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.updated_by) {\r\n    return options.renameMetaFields.updated_by;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'updatedby';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'updatedBy';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'updated_by';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'UpdatedBy';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'updated-by';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsCreateAt(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.created_at) {\r\n    return options.renameMetaFields.created_at;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'createdate';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'createDate';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'create_date';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'CreateDate';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'create-date';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsCreateBy(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.created_by) {\r\n    return options.renameMetaFields.created_by;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'createdby';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'createdBy';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'created_by';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'CreatedBy';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'created-by';\r\n  }\r\n  return defautCase;\r\n}\r\n","import { FirebaseApp } from 'firebase/app';\r\nimport { Auth, User, UserCredential } from 'firebase/auth';\r\nimport {\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  FieldValue,\r\n  Firestore,\r\n  OrderByDirection,\r\n  Query,\r\n  QueryDocumentSnapshot,\r\n  WriteBatch,\r\n} from 'firebase/firestore';\r\nimport {\r\n  FirebaseStorage,\r\n  StorageReference,\r\n  TaskState,\r\n  UploadTask,\r\n  UploadTaskSnapshot,\r\n} from 'firebase/storage';\r\n\r\nexport type FireUser = User;\r\nexport type FireApp = FirebaseApp;\r\n\r\nexport type FireStorage = FirebaseStorage;\r\nexport type FireStorageReference = StorageReference;\r\nexport type FireUploadTaskSnapshot = UploadTaskSnapshot;\r\nexport type FireUploadTask = UploadTask;\r\nexport type FireStoragePutFileResult = {\r\n  task: FireUploadTask;\r\n  taskResult: Promise<FireUploadTaskSnapshot>;\r\n  downloadUrl: Promise<string>;\r\n};\r\n\r\nexport type FireAuth = Auth;\r\nexport type FireAuthUserCredentials = UserCredential;\r\n\r\nexport type FireStore = Firestore;\r\nexport type FireStoreBatch = WriteBatch;\r\nexport type FireStoreTimeStamp = FieldValue;\r\nexport type FireStoreDocumentRef = DocumentReference;\r\nexport type FireStoreDocumentSnapshot = DocumentSnapshot<DocumentData>;\r\nexport type FireStoreCollectionRef = CollectionReference;\r\nexport type FireStoreQueryDocumentSnapshot = QueryDocumentSnapshot;\r\nexport type FireStoreQuery = Query;\r\nexport type FireStoreQueryOrder = OrderByDirection;\r\n\r\nexport const TASK_PAUSED = 'paused' as TaskState;\r\nexport const TASK_RUNNING = 'running' as TaskState;\r\nexport const TASK_CANCELED = 'cancelled' as TaskState;\r\n","import {\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  query,\r\n  QueryConstraint,\r\n  startAfter,\r\n  startAt,\r\n} from 'firebase/firestore';\r\nimport { ref } from 'firebase/storage';\r\nimport {\r\n  FireStoreCollectionRef,\r\n  FireStoreDocumentSnapshot,\r\n  FireStoreQuery,\r\n} from 'misc/firebase-models';\r\nimport { IFirestoreLogger, messageTypes } from '../../misc';\r\n\r\nexport function setQueryCursor(\r\n  document: FireStoreDocumentSnapshot,\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string\r\n) {\r\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\r\n  localStorage.setItem(key, document.id);\r\n\r\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\r\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\r\n  if (!localCursorKeys) {\r\n    localStorage.setItem(allCursorsKey, JSON.stringify([key]));\r\n  } else {\r\n    const cursors: string[] = JSON.parse(localCursorKeys);\r\n    const newCursors = cursors.concat(key);\r\n    localStorage.setItem(allCursorsKey, JSON.stringify(newCursors));\r\n  }\r\n}\r\n\r\nexport async function getQueryCursor(\r\n  collection: FireStoreCollectionRef,\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n): Promise<FireStoreDocumentSnapshot | false> {\r\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\r\n  const docId = localStorage.getItem(key);\r\n  if (!docId) {\r\n    return false;\r\n  }\r\n\r\n  const docSnapshot = await getDoc(doc(collection, docId));\r\n  flogger.logDocument(1)();\r\n  if (docSnapshot.exists()) {\r\n    return docSnapshot;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function clearQueryCursors(resourceName: string) {\r\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\r\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\r\n  if (localCursorKeys) {\r\n    const cursors: string[] = JSON.parse(localCursorKeys);\r\n    cursors.forEach((cursor) => localStorage.removeItem(cursor));\r\n    localStorage.removeItem(allCursorsKey);\r\n  }\r\n}\r\n\r\nexport async function findLastQueryCursor(\r\n  collection: FireStoreCollectionRef,\r\n  queryConstraints: QueryConstraint[],\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n) {\r\n  const { page, perPage } = params.pagination;\r\n\r\n  let lastQueryCursor: FireStoreDocumentSnapshot | false = false;\r\n  let currentPage = page - 1;\r\n\r\n  const currentPageParams = {\r\n    ...params,\r\n    pagination: {\r\n      ...params.pagination,\r\n    },\r\n  };\r\n  while (!lastQueryCursor && currentPage > 1) {\r\n    currentPage--;\r\n    currentPageParams.pagination.page = currentPage;\r\n    console.log('getting query cursor currentPage=', currentPage);\r\n    lastQueryCursor = await getQueryCursor(\r\n      collection,\r\n      currentPageParams,\r\n      resourceName,\r\n      flogger\r\n    );\r\n  }\r\n  const pageLimit = (page - currentPage) * perPage;\r\n  const isFirst = currentPage === 1;\r\n\r\n  function getQuery() {\r\n    if (isFirst) {\r\n      return query(collection, ...[...queryConstraints, limit(pageLimit)]);\r\n    } else {\r\n      return query(\r\n        collection,\r\n        ...[...queryConstraints, startAfter(lastQueryCursor), limit(pageLimit)]\r\n      );\r\n    }\r\n  }\r\n\r\n  const newQuery = getQuery();\r\n  const snapshots = await getDocs(newQuery);\r\n  const docsLength = snapshots.docs.length;\r\n  flogger.logDocument(docsLength)();\r\n  const lastDocIndex = docsLength - 1;\r\n  const lastDocRef = snapshots.docs[lastDocIndex];\r\n  return lastDocRef;\r\n}\r\n","import {\r\n  getDocs,\r\n  limit,\r\n  orderBy,\r\n  query,\r\n  QueryConstraint,\r\n  startAfter,\r\n  where,\r\n} from 'firebase/firestore';\r\nimport {\r\n  FireStoreCollectionRef,\r\n  FireStoreQuery,\r\n  FireStoreQueryOrder,\r\n} from 'misc/firebase-models';\r\nimport { IFirestoreLogger, messageTypes } from '../../misc';\r\nimport { findLastQueryCursor, getQueryCursor } from './queryCursors';\r\n\r\ninterface ParamsToQueryOptions {\r\n  filters?: boolean;\r\n  sort?: boolean;\r\n  pagination?: boolean;\r\n}\r\n\r\ninterface QueryPair {\r\n  noPagination: FireStoreQuery;\r\n  withPagination: FireStoreQuery;\r\n}\r\n\r\nconst defaultParamsToQueryOptions = {\r\n  filters: true,\r\n  sort: true,\r\n  pagination: true,\r\n};\r\n\r\nexport async function paramsToQuery<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(\r\n  collection: FireStoreCollectionRef,\r\n  params: TParams,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger,\r\n  options: ParamsToQueryOptions = defaultParamsToQueryOptions\r\n): Promise<QueryPair> {\r\n  const filterConstraints = options.filters\r\n    ? getFiltersConstraints(params.filter)\r\n    : [];\r\n\r\n  const sortConstraints = options.sort ? getSortConstraints(params.sort) : [];\r\n\r\n  const paginationConstraints = options.pagination\r\n    ? await getPaginationConstraints(\r\n        collection,\r\n        [...filterConstraints, ...sortConstraints],\r\n        params,\r\n        resourceName,\r\n        flogger\r\n      )\r\n    : [];\r\n\r\n  return {\r\n    noPagination: query(\r\n      collection,\r\n      ...[...filterConstraints, ...sortConstraints]\r\n    ),\r\n    withPagination: query(\r\n      collection,\r\n      ...[...filterConstraints, ...sortConstraints, ...paginationConstraints]\r\n    ),\r\n  };\r\n}\r\n\r\nexport function getFiltersConstraints(filters: {\r\n  [fieldName: string]: any;\r\n}): QueryConstraint[] {\r\n  const queries = Object.entries(filters).flatMap(([fieldName, fieldValue]) => {\r\n    const key = fieldName.split('_')[1];\r\n    if (key) {\r\n      if (key == 'equals') return [where(fieldName, '==', fieldValue)];\r\n      if (key == 'notEquals') return [where(fieldName, '!=', fieldValue)];\r\n      if (key == 'gte') return [where(fieldName, '>=', fieldValue)];\r\n      if (key == 'gt') return [where(fieldName, '>', fieldValue)];\r\n      if (key == 'lte') return [where(fieldName, '<=', fieldValue)];\r\n      if (key == 'lt') return [where(fieldName, '<', fieldValue)];\r\n      if (key == 'array-contains')\r\n        return [where(fieldName, 'array-contains', fieldValue)];\r\n      if (key == 'array-contains-any')\r\n        return [where(fieldName, 'array-contains-any', fieldValue)];\r\n      if (key == 'in') return [where(fieldName, 'in', fieldValue)];\r\n      if (key == 'not-in') return [where(fieldName, 'not-in', fieldValue)];\r\n      if (key == 'contains')\r\n        return [\r\n          where(fieldName, '>=', fieldValue.toLocaleLowerCase()),\r\n          where(fieldName, '<=', `${fieldValue.toLocaleLowerCase()}\\uf8ff`),\r\n        ];\r\n    }\r\n    return [where(fieldName, '==', fieldValue)];\r\n  });\r\n  console.log(queries);\r\n  return queries;\r\n}\r\nexport function getSortConstraints(sort: {\r\n  field: string;\r\n  order: string;\r\n}): QueryConstraint[] {\r\n  if (sort != null && sort.field !== 'id') {\r\n    const { field, order } = sort;\r\n    const parsedOrder = order.toLocaleLowerCase() as FireStoreQueryOrder;\r\n    return [orderBy(field, parsedOrder)];\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getPaginationConstraints<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(\r\n  collectionRef: FireStoreCollectionRef,\r\n  queryConstraints: QueryConstraint[],\r\n  params: TParams,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n): Promise<QueryConstraint[]> {\r\n  const { page, perPage } = params.pagination;\r\n\r\n  if (page === 1) {\r\n    return [limit(perPage)];\r\n  } else {\r\n    let queryCursor = await getQueryCursor(\r\n      collectionRef,\r\n      params,\r\n      resourceName,\r\n      flogger\r\n    );\r\n    if (!queryCursor) {\r\n      queryCursor = await findLastQueryCursor(\r\n        collectionRef,\r\n        queryConstraints,\r\n        params,\r\n        resourceName,\r\n        flogger\r\n      );\r\n    }\r\n    return [startAfter(queryCursor), limit(perPage)];\r\n  }\r\n}\r\n\r\nexport function getFullParamsForQuery<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(reactAdminParams: TParams, softdeleteEnabled: boolean): TParams {\r\n  return {\r\n    ...reactAdminParams,\r\n    filter: softdeleteEnabled\r\n      ? {\r\n          deleted: false,\r\n          ...reactAdminParams.filter,\r\n        }\r\n      : reactAdminParams.filter,\r\n  };\r\n}\r\n\r\nexport function getNextPageParams<TParams extends messageTypes.IParamsGetList>(\r\n  params: TParams\r\n): TParams {\r\n  return {\r\n    ...params,\r\n    pagination: {\r\n      ...params.pagination,\r\n      page: params.pagination.page + 1,\r\n    },\r\n  };\r\n}\r\n","import { getCountFromServer, getDocs } from 'firebase/firestore';\r\nimport {\r\n  log,\r\n  messageTypes,\r\n  parseFireStoreDocument,\r\n  recursivelyMapStorageUrls,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient, IResource, ResourceManager } from '../database';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport {\r\n  getFullParamsForQuery,\r\n  getNextPageParams,\r\n  paramsToQuery,\r\n} from './paramsToQuery';\r\nimport { setQueryCursor } from './queryCursors';\r\n\r\nexport class FirebaseLazyLoadingClient {\r\n  constructor(\r\n    private readonly options: RAFirebaseOptions,\r\n    private readonly rm: ResourceManager,\r\n    private client: FireClient\r\n  ) {}\r\n\r\n  public async apiGetList<T extends ra.Record>(\r\n    resourceName: string,\r\n    reactAdminParams: ra.GetListParams\r\n  ): Promise<ra.GetListResult<T>> {\r\n    const r = await this.tryGetResource(resourceName);\r\n    const params = getFullParamsForQuery(\r\n      reactAdminParams,\r\n      !!this.options.softDelete\r\n    );\r\n\r\n    log('apiGetListLazy', { resourceName, params });\r\n\r\n    const { noPagination, withPagination } = await paramsToQuery(\r\n      r.collection,\r\n      params,\r\n      resourceName,\r\n      this.client.flogger\r\n    );\r\n\r\n    const snapshots = await getDocs(withPagination);\r\n\r\n    const resultsCount = snapshots.docs.length;\r\n    if (!resultsCount) {\r\n      log('apiGetListLazy', {\r\n        message: 'There are not records for given query',\r\n      });\r\n      return { data: [], total: 0 };\r\n    }\r\n    this.client.flogger.logDocument(resultsCount)();\r\n\r\n    // tslint:disable-next-line\r\n    const data = snapshots.docs.map((d) => parseFireStoreDocument<T>(d));\r\n\r\n    const nextPageCursor = snapshots.docs[snapshots.docs.length - 1];\r\n    // After fetching documents save queryCursor for next page\r\n    setQueryCursor(nextPageCursor, getNextPageParams(params), resourceName);\r\n    // Hardcoded to allow next pages, as we don't have total number of items\r\n\r\n    let total = await getCountFromServer(noPagination);\r\n\r\n    if (this.options.relativeFilePaths) {\r\n      const parsedData = await Promise.all(\r\n        data.map(async (doc: any) => {\r\n          for (let fieldName in doc) {\r\n            doc[fieldName] = await recursivelyMapStorageUrls(\r\n              this.client.fireWrapper,\r\n              doc[fieldName]\r\n            );\r\n          }\r\n          return doc;\r\n        })\r\n      );\r\n\r\n      log('apiGetListLazy result', {\r\n        docs: parsedData,\r\n        resource: r,\r\n        collectionPath: r.collection.path,\r\n      });\r\n\r\n      return {\r\n        data: parsedData,\r\n        total: total.data().count,\r\n      };\r\n    }\r\n\r\n    log('apiGetListLazy result', {\r\n      docs: data,\r\n      resource: r,\r\n      collectionPath: r.collection.path,\r\n    });\r\n\r\n    return { data, total: total.data().count };\r\n  }\r\n\r\n  public async apiGetManyReference(\r\n    resourceName: string,\r\n    reactAdminParams: messageTypes.IParamsGetManyReference\r\n  ): Promise<messageTypes.IResponseGetManyReference> {\r\n    const r = await this.tryGetResource(resourceName);\r\n    log('apiGetManyReferenceLazy', {\r\n      resourceName,\r\n      resource: r,\r\n      reactAdminParams,\r\n    });\r\n    const filterWithTarget = {\r\n      ...reactAdminParams.filter,\r\n      [reactAdminParams.target]: reactAdminParams.id,\r\n    };\r\n    const params = getFullParamsForQuery(\r\n      {\r\n        ...reactAdminParams,\r\n        filter: filterWithTarget,\r\n      },\r\n      !!this.options.softDelete\r\n    );\r\n\r\n    const { withPagination } = await paramsToQuery(\r\n      r.collection,\r\n      params,\r\n      resourceName,\r\n      this.client.flogger\r\n    );\r\n\r\n    const snapshots = await getDocs(withPagination);\r\n    const resultsCount = snapshots.docs.length;\r\n    this.client.flogger.logDocument(resultsCount)();\r\n    const data = snapshots.docs.map(parseFireStoreDocument);\r\n    if (this.options.relativeFilePaths) {\r\n      const parsedData = await Promise.all(\r\n        data.map(async (doc: any) => {\r\n          for (let fieldName in doc) {\r\n            doc[fieldName] = await recursivelyMapStorageUrls(\r\n              this.client.fireWrapper,\r\n              doc[fieldName]\r\n            );\r\n          }\r\n          return doc;\r\n        })\r\n      );\r\n\r\n      log('apiGetManyReferenceLazy result', {\r\n        docs: parsedData,\r\n        resource: r,\r\n        collectionPath: r.collection.path,\r\n      });\r\n\r\n      return {\r\n        data: parsedData,\r\n        total: data.length,\r\n      };\r\n    }\r\n\r\n    log('apiGetManyReferenceLazy result', {\r\n      docs: data,\r\n      resource: r,\r\n      collectionPath: r.collection.path,\r\n    });\r\n    return { data, total: data.length };\r\n  }\r\n\r\n  private async tryGetResource(\r\n    resourceName: string,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    return this.rm.TryGetResourcePromise(resourceName, collectionQuery);\r\n  }\r\n}\r\n","import {\r\n  filterArray,\r\n  log,\r\n  recursivelyMapStorageUrls,\r\n  sortArray,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\nimport { FirebaseLazyLoadingClient } from '../lazy-loading/FirebaseLazyLoadingClient';\r\n\r\nexport async function GetList<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetListParams,\r\n  client: FireClient\r\n): Promise<ra.GetListResult<T>> {\r\n  log('GetList', { resourceName, params });\r\n  const { rm, fireWrapper, options } = client;\r\n\r\n  if (options?.lazyLoading?.enabled) {\r\n    const lazyClient = new FirebaseLazyLoadingClient(options, rm, client);\r\n    return lazyClient.apiGetList<T>(resourceName, params);\r\n  }\r\n\r\n  const filterSafe = params.filter || {};\r\n\r\n  const collectionQuery = filterSafe.collectionQuery;\r\n  delete filterSafe.collectionQuery;\r\n\r\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\r\n  const data = r.list;\r\n  if (params.sort != null) {\r\n    const { field, order } = params.sort;\r\n    if (order === 'ASC') {\r\n      sortArray(data, field, 'asc');\r\n    } else {\r\n      sortArray(data, field, 'desc');\r\n    }\r\n  }\r\n  let softDeleted = data;\r\n  if (options.softDelete && !Object.keys(filterSafe).includes('deleted')) {\r\n    softDeleted = data.filter((doc) => !doc.deleted);\r\n  }\r\n  const filteredData = filterArray(softDeleted, filterSafe);\r\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\r\n  const pageEnd = pageStart + params.pagination.perPage;\r\n  const dataPage = filteredData.slice(pageStart, pageEnd) as T[];\r\n  const total = filteredData.length;\r\n\r\n  if (options.relativeFilePaths) {\r\n    const fetchedData = await Promise.all(\r\n      dataPage.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\r\n    );\r\n    return {\r\n      data: fetchedData,\r\n      total,\r\n    };\r\n  }\r\n\r\n  return {\r\n    data: dataPage,\r\n    total,\r\n  };\r\n}\r\n","import { doc, getDoc } from 'firebase/firestore';\r\nimport { log, recursivelyMapStorageUrls } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetMany<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetManyParams,\r\n  client: FireClient\r\n): Promise<ra.GetManyResult<T>> {\r\n  const { rm, options, fireWrapper } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  const ids = params.ids;\r\n  log('GetMany', { resourceName, resource: r, params, ids });\r\n  const matchDocSnaps = await Promise.all(\r\n    ids.map((idObj) => {\r\n      if (typeof idObj === 'string') {\r\n        return getDoc(doc(r.collection, idObj));\r\n      }\r\n      // Will get and resolve reference documents into the current doc\r\n      return getDoc(doc(r.collection, (idObj as any)['___refid']));\r\n    })\r\n  );\r\n  client.flogger.logDocument(ids.length)();\r\n  const matches = matchDocSnaps.map(\r\n    (snap) => ({ ...snap.data(), id: snap.id } as T)\r\n  );\r\n  const permittedData = options.softDelete\r\n    ? matches.filter((row) => !row['deleted'])\r\n    : matches;\r\n  if (options.relativeFilePaths) {\r\n    const data = await Promise.all(\r\n      permittedData.map((d) => recursivelyMapStorageUrls(fireWrapper, d))\r\n    );\r\n    return {\r\n      data,\r\n    };\r\n  }\r\n\r\n  return {\r\n    data: permittedData,\r\n  };\r\n}\r\n","import {\r\n  filterArray,\r\n  log,\r\n  recursivelyMapStorageUrls,\r\n  sortArray,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetManyReference<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetManyReferenceParams,\r\n  client: FireClient\r\n): Promise<ra.GetManyReferenceResult<T>> {\r\n  const { rm, options, fireWrapper } = client;\r\n  log('GetManyReference', { resourceName, params });\r\n  const filterSafe = params.filter || {};\r\n  const collectionQuery = filterSafe.collectionQuery;\r\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\r\n  delete filterSafe.collectionQuery;\r\n  log('apiGetManyReference', { resourceName, resource: r, params });\r\n  const data = r.list;\r\n  const targetField = params.target;\r\n  const targetValue = params.id;\r\n  let softDeleted = data;\r\n  if (options.softDelete) {\r\n    softDeleted = data.filter((doc) => !doc['deleted']);\r\n  }\r\n  const filteredData = filterArray(softDeleted, filterSafe);\r\n  const targetIdFilter: Record<string, ra.Identifier> = {};\r\n  targetIdFilter[targetField] = targetValue;\r\n  const permittedData = filterArray(filteredData, targetIdFilter);\r\n  if (params.sort != null) {\r\n    const { field, order } = params.sort;\r\n    if (order === 'ASC') {\r\n      sortArray(permittedData, field, 'asc');\r\n    } else {\r\n      sortArray(permittedData, field, 'desc');\r\n    }\r\n  }\r\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\r\n  const pageEnd = pageStart + params.pagination.perPage;\r\n  const dataPage = permittedData.slice(pageStart, pageEnd) as T[];\r\n  const total = permittedData.length;\r\n\r\n  if (options.relativeFilePaths) {\r\n    const fetchedData = await Promise.all(\r\n      permittedData.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\r\n    );\r\n    return { data: fetchedData, total };\r\n  }\r\n\r\n  return { data: dataPage, total };\r\n}\r\n","import { log, translateDocFromFirestore } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetOne<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetOneParams,\r\n  client: FireClient\r\n): Promise<ra.GetOneResult<T>> {\r\n  log('GetOne', { resourceName, params });\r\n  const { rm } = client;\r\n  try {\r\n    const id = params.id + '';\r\n    const dataSingle = await rm.GetSingleDoc(resourceName, id);\r\n    client.flogger.logDocument(1)();\r\n    return { data: dataSingle as T };\r\n  } catch (error) {\r\n    throw new Error(\r\n      'Error getting id: ' + params.id + ' from collection: ' + resourceName\r\n    );\r\n  }\r\n}\r\n","import {\r\n  getAbsolutePath,\r\n  log,\r\n  logError,\r\n  logger,\r\n  MakeFirestoreLogger,\r\n  retrieveStatusCode,\r\n} from '../misc';\r\nimport { FireApp } from '../misc/firebase-models';\r\nimport * as ra from '../misc/react-admin-models';\r\nimport { Create, Delete, DeleteMany, Update, UpdateMany } from './commands';\r\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\r\nimport { FireClient } from './database/FireClient';\r\nimport { RAFirebaseOptions } from './options';\r\nimport { GetList, GetMany, GetManyReference, GetOne } from './queries';\r\n\r\nexport interface IDataProvider extends ra.DataProvider {\r\n  app: FireApp;\r\n}\r\n\r\nexport function DataProvider(\r\n  firebaseConfig: {},\r\n  optionsInput?: RAFirebaseOptions\r\n): IDataProvider {\r\n  const options = optionsInput || {};\r\n  verifyDataProviderArgs(firebaseConfig, options);\r\n\r\n  const flogger = MakeFirestoreLogger(options);\r\n  logger.SetEnabled(!!options?.logging);\r\n  flogger.SetEnabled(!!options?.firestoreCostsLogger?.enabled);\r\n  flogger.ResetCount(!options?.firestoreCostsLogger?.persistCount);\r\n  log('Creating FirebaseDataProvider', {\r\n    firebaseConfig,\r\n    options,\r\n  });\r\n\r\n  const fireWrapper = new FirebaseWrapper(optionsInput, firebaseConfig);\r\n\r\n  async function run<T>(cb: () => Promise<T>) {\r\n    let res: any;\r\n    try {\r\n      res = await cb();\r\n      return res;\r\n    } catch (error) {\r\n      const errorMsg = ((error as any) || '').toString();\r\n      const code = retrieveStatusCode(errorMsg);\r\n      const errorObj = { status: code, message: errorMsg, json: res };\r\n      logError('DataProvider:', error, { errorMsg, code, errorObj });\r\n      throw errorObj;\r\n    }\r\n  }\r\n  const client = new FireClient(fireWrapper, options, flogger);\r\n\r\n  const newProviderApi: IDataProvider = {\r\n    app: fireWrapper.GetApp(),\r\n    getList<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetListParams\r\n    ): Promise<ra.GetListResult<RecordType>> {\r\n      return run(() => GetList<RecordType>(resource, params, client));\r\n    },\r\n    getOne<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetOneParams\r\n    ): Promise<ra.GetOneResult<RecordType>> {\r\n      return run(() => GetOne<RecordType>(resource, params, client));\r\n    },\r\n    getMany<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetManyParams\r\n    ): Promise<ra.GetManyResult<RecordType>> {\r\n      return run(() => GetMany<RecordType>(resource, params, client));\r\n    },\r\n    getManyReference<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetManyReferenceParams\r\n    ): Promise<ra.GetManyReferenceResult<RecordType>> {\r\n      return run(() => GetManyReference<RecordType>(resource, params, client));\r\n    },\r\n    update<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.UpdateParams\r\n    ): Promise<ra.UpdateResult<RecordType>> {\r\n      return run(() => Update<RecordType>(resource, params, client));\r\n    },\r\n    updateMany(\r\n      resource: string,\r\n      params: ra.UpdateManyParams\r\n    ): Promise<ra.UpdateManyResult> {\r\n      return run(() => UpdateMany(resource, params, client));\r\n    },\r\n    create<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.CreateParams\r\n    ): Promise<ra.CreateResult<RecordType>> {\r\n      return run(() => Create<RecordType>(resource, params, client));\r\n    },\r\n    delete<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.DeleteParams\r\n    ): Promise<ra.DeleteResult<RecordType>> {\r\n      return run(() => Delete(resource, params, client));\r\n    },\r\n    deleteMany(\r\n      resource: string,\r\n      params: ra.DeleteManyParams\r\n    ): Promise<ra.DeleteManyResult> {\r\n      return run(() => DeleteMany(resource, params, client));\r\n    },\r\n  };\r\n\r\n  return newProviderApi;\r\n}\r\n\r\nfunction verifyDataProviderArgs(\r\n  firebaseConfig: {},\r\n  options?: RAFirebaseOptions\r\n) {\r\n  const hasNoApp = !options || !options.app;\r\n  const hasNoConfig = !firebaseConfig;\r\n  if (hasNoConfig && hasNoApp) {\r\n    throw new Error(\r\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\r\n    );\r\n  }\r\n  if (options && options.rootRef) {\r\n    // Will throw error if rootRef doesn't point to a document\r\n    getAbsolutePath(options.rootRef, 'test');\r\n  }\r\n}\r\n"],"names":["sortArray","data","field","dir","sort","a","b","get","rawB","isAsc","Number","isFinite","rawA","basicSort","toLowerCase","Date","aValue","bValue","filterArray","searchFields","isEmpty","searchObjs","Object","keys","map","fieldName","getSubObjects","value","searchField","searchValue","tree","leaves","obj","path","key","hasOwnProperty","objVal","Array","recursivelyWalk","currentPath","push","getFieldReferences","apply","filter","row","reduce","acc","cur","res","searchThis","toString","includes","isArray","doesRowMatch","LogNoOp","LoggerBase","title","cacheEnabledKey","this","isEnabled","localStorage","getItem","SetEnabled","setItem","removeItem","console","log","bind","warn","error","logger","KEY_SINGLE","logError","dispatch","eventName","fileName","eventMonitor","document","getElementById","event","CustomEvent","detail","dispatchEvent","REF_INDENTIFIER","translateDocFromFirestore","parsedDoc","refdocs","recusivelyCheckObjectValue","result","input","fieldPath","toDate","index","isInputADocReference","documentReference","refDocPath","id","firestore","parent","recursivelyMapStorageUrls","fireWrapper","fieldValue","_exit","_temp2","_result","Promise","all","_recursivelyMapStorag","resolve","_recursivelyMapStorag2","e","reject","isFileField","has","getDownloadURL","ref","storage","src","then","_fieldValue$src","_catch","parseFireStoreDocument","doc","logWarn","refDocs","d","set","applyRefDocs","dataWithRefs","getAbsolutePath","rootRef","relativePath","Error","rootRefValue","withSlashes","join","split","length","slice","joinPaths","call","arguments","translateDocToFirestore","uploads","recusivelyParseObjectValue","fieldDotsPath","refPath","fieldSlashesPath","rawFile","FirebaseWrapper","inputOptions","firebaseConfig","_app","_firestore","_storage","_auth","options","optionsSafe","window","app","apps","getApps","getApp","ObtainFirebaseApp","getFirestore","getStorage","getAuth","_proto","prototype","dbGetCollection","absolutePath","dbCreateBatch","writeBatch","dbMakeNewId","collection","OnUserLogout","callBack","onAuthStateChanged","user","isLoggedOut","putFile","storagePath","uploadBytesResumable","taskResult","rej","task","t","url","downloadUrl","getStorageDownloadUrl","fieldSrc","serverTimestamp","firestoreServerTimestamp","authSetPersistence","persistenceInput","persistenceResolved","browserLocalPersistence","inMemoryPersistence","browserSessionPersistence","setPersistence","authSigninEmailPassword","email","password","signInWithEmailAndPassword","authSignOut","signOut","authGetUserLoggedIn","_this5","auth","currentUser","unsubscribe","GetUserLogin","GetApp","db","AuthClient","optionsInput","persistence","HandleAuthLogin","params","_this","username","getUserLogin","HandleAuthLogout","HandleAuthError","errorHttp","retrieveStatusTxt","status","HandleAuthCheck","HandleGetPermissions","_this3","getIdTokenResult","token","claims","HandleGetIdentity","_this4","_ref","displayName","photoURL","uid","fullName","avatar","HandleGetJWTAuthTime","authTime","HandleGetJWTExpirationTime","_this6","expirationTime","HandleGetJWTSignInProvider","_this7","signInProvider","HandleGetJWTIssuedAtTime","_this8","issuedAtTime","HandleGetJWTToken","_this9","AuthProvider","VerifyAuthProviderArgs","logging","login","logout","checkAuth","checkError","getPermissions","getIdentity","getAuthUser","getJWTAuthTime","getJWTExpirationTime","getJWTSignInProvider","getJWTClaims","getJWTToken","Create","resourceName","client","rm","TryGetResource","r","newId","parseDataAndUpload","docObj","_extends","checkRemoveIdField","addCreatedByFields","addUpdatedByFields","docObjTransformed","transformToDb","setDoc","merge","resource","hasOverridenDocId","overridenId","getDoc","_getDoc","exists","createData","createDocObj","createDocObjTransformed","_data","Delete","softDelete","deleted","updateDoc","previousData","DeleteSoft","_temp","deleteDoc","DeleteMany","DeleteManySoft","ids","idStr","returnData","_step","_iterator","done","docToDelete","batch","commit","Update","UpdateMany","ResourceManager","flogger","resources","refresh","collectionQuery","TryGetResourcePromise","_this2","RefreshResource","GetResource","initPath","_this4$options","lazyLoading","_this4$options$lazyLo","enabled","collectionRef","applyQuery","getDocs","collectionOrQuery","newDocs","forEach","list","logDocument","docs","collectionPath","GetSingleDoc","docId","docSnap","hasBeenInited","pathAbsolute","allResources","getUserIdentifier","associateUsersById","getCurrentUserId","getCurrentUserEmail","collRef","FireClient","dontAddIdFieldToDoc","documentData","docPath","u","parseStoragePath","useFileName","fileNameBits","File","name","fileExtension","pop","useFileNamesInStorage","saveFile","link","AddCreatedByFields","disableMeta","currentUserIdentifier","createAtSelector","GetSelectorsCreateAt","renameMetaFields","created_at","casing","metaFieldCasing","defautCase","createBySelector","GetSelectorsCreateBy","created_by","AddUpdatedByFields","updateAtSelector","GetSelectorsUpdateAt","updated_at","updateBySelector","updated_by","GetSelectorsUpdateBy","_this4$fireWrapper$pu","on","snapshot","progress","bytesTransferred","totalBytes","state","relativeFilePaths","storageError","pact","s","_Pact","o","_settle","v","observer","onFulfilled","onRejected","callback","thenable","getQueryCursor","btoa","JSON","stringify","docSnapshot","paramsToQuery","defaultParamsToQueryOptions","paginationConstraints","noPagination","query","filterConstraints","sortConstraints","withPagination","concat","filters","entries","flatMap","where","toLocaleLowerCase","queries","parsedOrder","order","orderBy","getSortConstraints","pagination","getPaginationConstraints","queryConstraints","_params$pagination","perPage","page","limit","queryCursor","_temp3","startAfter","findLastQueryCursor","pageLimit","currentPage","newQuery","lastQueryCursor","snapshots","docsLength","currentPageParams","_getQueryCursor","_findLastQueryCursor","getFiltersConstraints","getFullParamsForQuery","reactAdminParams","softdeleteEnabled","FirebaseLazyLoadingClient","apiGetList","tryGetResource","resultsCount","message","total","allCursorsKey","localCursorKeys","newCursors","parse","setQueryCursor","getNextPageParams","getCountFromServer","count","parsedData","_data$total","apiGetManyReference","_extends2","filterWithTarget","target","_ref2","_exit2","_temp5","_result2","_temp6","_temp4","GetList","_options$lazyLoading","lazyClient","filterSafe","dataPage","softDeleted","filteredData","pageStart","fetchedData","GetMany","idObj","matchDocSnaps","permittedData","matches","snap","GetManyReference","targetField","targetIdFilter","targetValue","_params$sort","GetOne","dataSingle","DataProvider","_options$firestoreCos","_options$firestoreCos2","run","cb","_cb","errorMsg","code","statusTxt","regexResult","exec","retrieveStatusCode","errorObj","json","verifyDataProviderArgs","ResetCount","shouldReset","docCount","incrementBy","currentCountRaw","parseInt","incremented","incrementRead","MakeFirestoreLogger","firestoreCostsLogger","persistCount","getList","getOne","getMany","getManyReference","update","updateMany","create","deleteMany"],"mappings":"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"}