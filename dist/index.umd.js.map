{"version":3,"file":"index.umd.js","sources":["../src/misc/arrayHelpers.ts","../src/misc/objectFlatten.ts","../src/misc/logger/logger-base.ts","../src/misc/logger/firestore-logger.ts","../src/misc/logger/logger.ts","../src/misc/dispatcher.ts","../src/misc/internal.models.ts","../src/misc/translate-from-firestore.ts","../src/misc/document-parser.ts","../src/misc/pathHelper.ts","../src/misc/translate-to-firestore.ts","../src/providers/database/firebase/FirebaseWrapper.ts","../src/providers/AuthProvider.ts","../src/misc/status-code-translator.ts","../src/providers/database/ResourceManager.ts","../src/providers/database/FireClient.ts","../src/misc/storage-parser.ts","../src/misc/metadata-parser.ts","../src/misc/firebase-models.ts","../src/providers/lazy-loading/queryCursors.ts","../src/providers/lazy-loading/paramsToQuery.ts","../src/providers/lazy-loading/FirebaseLazyLoadingClient.ts","../src/providers/DataProvider.ts","../src/providers/queries/GetList.ts","../src/providers/queries/GetOne.ts","../src/providers/queries/GetMany.ts","../src/providers/queries/GetManyReference.ts","../src/providers/commands/Update.ts","../src/providers/commands/UpdateMany.ts","../src/providers/commands/Create.ts","../src/providers/commands/Delete.ts","../src/providers/commands/Delete.Soft.ts","../src/providers/commands/DeleteMany.ts","../src/providers/commands/DeleteMany.Soft.ts"],"sourcesContent":["import { get, isEmpty } from 'lodash';\r\nimport { getFieldReferences, SearchObj } from './objectFlatten';\r\n\r\nexport function sortArray(\r\n  data: Array<{}>,\r\n  field: string,\r\n  dir: 'asc' | 'desc'\r\n): void {\r\n  data.sort((a: {}, b: {}) => {\r\n    const rawA = get(a, field);\r\n    const rawB = get(b, field);\r\n    const isAsc = dir === 'asc';\r\n\r\n    const isNumberField = Number.isFinite(rawA) && Number.isFinite(rawB);\r\n    if (isNumberField) {\r\n      return basicSort(rawA, rawB, isAsc);\r\n    }\r\n    const isStringField = typeof rawA === 'string' && typeof rawB === 'string';\r\n    if (isStringField) {\r\n      const aParsed = rawA.toLowerCase();\r\n      const bParsed = rawB.toLowerCase();\r\n      return basicSort(aParsed, bParsed, isAsc);\r\n    }\r\n    const isDateField = rawA instanceof Date && rawB instanceof Date;\r\n    if (isDateField) {\r\n      return basicSort(rawA, rawB, isAsc);\r\n    }\r\n    return basicSort(!!rawA, !!rawB, isAsc);\r\n  });\r\n}\r\n\r\nfunction basicSort(aValue: any, bValue: any, isAsc: boolean) {\r\n  if (aValue > bValue) {\r\n    return isAsc ? 1 : -1;\r\n  }\r\n  if (aValue < bValue) {\r\n    return isAsc ? -1 : 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nexport function filterArray(\r\n  data: Array<{}>,\r\n  searchFields?: { [field: string]: string | number | boolean | null }\r\n): Array<{}> {\r\n  if (!searchFields || isEmpty(searchFields)) {\r\n    return data;\r\n  }\r\n  const searchObjs: SearchObj[] = [];\r\n  Object.keys(searchFields).map((fieldName) => {\r\n    const fieldValue = searchFields[fieldName];\r\n    const getSubObjects = getFieldReferences(fieldName, fieldValue);\r\n    searchObjs.push(...getSubObjects);\r\n  });\r\n  const filtered = data.filter((row) =>\r\n    searchObjs.reduce((acc, cur) => {\r\n      const res = doesRowMatch(row, cur.searchField, cur.searchValue);\r\n      return res && acc;\r\n    }, true as boolean)\r\n  );\r\n  return filtered;\r\n}\r\n\r\nexport function doesRowMatch(\r\n  row: {},\r\n  searchField: string,\r\n  searchValue: any\r\n): boolean {\r\n  const searchThis = get(row, searchField);\r\n  const bothAreFalsey = !searchThis && !searchValue;\r\n  if (bothAreFalsey) {\r\n    return true;\r\n  }\r\n  const nothingToSearch = !searchThis;\r\n  if (nothingToSearch) {\r\n    return false;\r\n  }\r\n  const isStringSearch = typeof searchValue === 'string';\r\n  if (isStringSearch) {\r\n    return searchThis\r\n      .toString()\r\n      .toLowerCase()\r\n      .includes(searchValue.toLowerCase());\r\n  }\r\n  const isBooleanOrNumber =\r\n    typeof searchValue === 'boolean' || typeof searchValue === 'number';\r\n  if (isBooleanOrNumber) {\r\n    return searchThis === searchValue;\r\n  }\r\n  const isArraySearch = Array.isArray(searchValue);\r\n  if (isArraySearch) {\r\n    return searchValue.includes(searchThis);\r\n  }\r\n  return false;\r\n}\r\n","type SearchValues = {} | number | string | boolean | null;\r\ntype SearchValue = SearchValues | SearchValue[];\r\n\r\nexport interface SearchObj {\r\n  searchField: string;\r\n  searchValue: SearchValue;\r\n}\r\nexport function getFieldReferences(\r\n  fieldName: string,\r\n  value: {} | SearchValue\r\n): SearchObj[] {\r\n  const isFalsy = !value;\r\n  const isSimple =\r\n    isFalsy ||\r\n    typeof value === 'string' ||\r\n    typeof value === 'number' ||\r\n    typeof value === 'boolean';\r\n\r\n  if (isSimple) {\r\n    return [\r\n      {\r\n        searchField: fieldName,\r\n        searchValue: value as SearchValue,\r\n      },\r\n    ];\r\n  }\r\n  const tree = {} as Record<string, SearchValue>;\r\n  tree[fieldName] = value;\r\n  return objectFlatten(tree);\r\n}\r\n\r\nexport function objectFlatten(tree: {}): SearchObj[] {\r\n  var leaves: SearchObj[] = [];\r\n  var recursivelyWalk = (obj: any, path: string | null) => {\r\n    path = path || '';\r\n    for (var key in obj) {\r\n      if (obj.hasOwnProperty(key)) {\r\n        const objVal = obj && obj[key];\r\n        const currentPath = !!path ? path + '.' + key : key;\r\n        const isWalkable =\r\n          typeof objVal === 'object' || objVal instanceof Array;\r\n        if (isWalkable) {\r\n          recursivelyWalk(objVal, currentPath);\r\n        } else {\r\n          leaves.push({ searchField: currentPath, searchValue: objVal });\r\n        }\r\n      }\r\n    }\r\n  };\r\n  recursivelyWalk(tree, null);\r\n  return leaves;\r\n}\r\n","type LogFn = (...args: any) => void;\r\n\r\nexport const LogNoOp: LogFn = (...args: any) => null;\r\n\r\nexport class LoggerBase {\r\n  constructor(private title: string, private cacheEnabledKey: string) {}\r\n\r\n  private isEnabled() {\r\n    return !!localStorage.getItem(this.cacheEnabledKey);\r\n  }\r\n\r\n  SetEnabled(isEnabled: boolean) {\r\n    if (isEnabled) {\r\n      localStorage.setItem(this.cacheEnabledKey, 'true');\r\n    } else {\r\n      localStorage.removeItem(this.cacheEnabledKey);\r\n    }\r\n  }\r\n\r\n  public get log() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.log.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n\r\n  public get warn() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.warn.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n\r\n  public get error() {\r\n    if (!this.isEnabled()) {\r\n      return LogNoOp;\r\n    }\r\n    const boundLogFn: (...args: any) => void = console.error.bind(\r\n      console,\r\n      this.title\r\n    );\r\n    return boundLogFn;\r\n  }\r\n}\r\n","import { RAFirebaseOptions } from 'providers/options';\r\nimport { LoggerBase, LogNoOp } from './logger-base';\r\n\r\nconst LOGGER_ENABLEDKEY = 'LOGGING_FIRESTORE_COSTS_ENABLED';\r\nconst logger = new LoggerBase('ðŸ’¸firestore-costs:', LOGGER_ENABLEDKEY);\r\n\r\nconst KEY_SINGLE = 'firecosts-single-reads';\r\n\r\nexport interface IFirestoreLogger {\r\n  logDocument: (count: number) => Function;\r\n  SetEnabled: (isEnabled: boolean) => void;\r\n  ResetCount: (shouldReset: boolean) => void;\r\n}\r\n\r\nexport function MakeFirestoreLogger(\r\n  options: RAFirebaseOptions\r\n): IFirestoreLogger {\r\n  function notEnabled() {\r\n    return !options?.lazyLoading?.enabled;\r\n  }\r\n\r\n  function incrementRead(incrementBy = 1) {\r\n    const currentCountRaw = localStorage.getItem(KEY_SINGLE) || '';\r\n    const currentCount = parseInt(currentCountRaw) || 0;\r\n    const incremented = currentCount + incrementBy;\r\n    localStorage.setItem(KEY_SINGLE, incremented + '');\r\n    return incremented;\r\n  }\r\n  function clearCache() {\r\n    localStorage.removeItem(KEY_SINGLE);\r\n  }\r\n  return {\r\n    SetEnabled(isEnabled: boolean) {\r\n      logger.SetEnabled(isEnabled);\r\n    },\r\n    ResetCount(shouldReset: boolean) {\r\n      shouldReset && clearCache();\r\n    },\r\n    logDocument(docCount: number) {\r\n      if (notEnabled()) {\r\n        return LogNoOp;\r\n      }\r\n      const count = incrementRead(docCount);\r\n      const suffix = `+${docCount} (session total=${count} documents read)`;\r\n      const boundLogFn: (...args: any) => void = logger.log.bind(\r\n        console,\r\n        suffix\r\n      );\r\n      return boundLogFn;\r\n    },\r\n  };\r\n}\r\n","import { LoggerBase } from './logger-base';\r\n\r\nconst LOGGER_ENABLEDKEY = 'LOGGING_ENABLED';\r\nexport const logger = new LoggerBase('ðŸ”¥raf:', LOGGER_ENABLEDKEY);\r\n\r\nexport const log = logger.log;\r\nexport const logError = logger.error;\r\nexport const logWarn = logger.warn;\r\n","import { log } from './logger';\r\n\r\nexport type DispatchEvent =\r\n  | 'FILE_UPLOAD_WILL_START'\r\n  | 'FILE_UPLOAD_PROGRESS'\r\n  | 'FILE_UPLOAD_PAUSED'\r\n  | 'FILE_UPLOAD_RUNNING'\r\n  | 'FILE_UPLOAD_CANCELED'\r\n  | 'FILE_UPLOAD_COMPLETE'\r\n  | 'FILE_SAVED';\r\n\r\nexport function dispatch(\r\n  eventName: DispatchEvent,\r\n  fileName: string,\r\n  data?: any\r\n): void {\r\n  const eventMonitor = document.getElementById('eventMonitor');\r\n  if (!eventMonitor) {\r\n    log(\r\n      `eventMonitor not found to dispatch event ${eventName} for ${fileName}`\r\n    );\r\n    return;\r\n  }\r\n  const eventData = { fileName, data };\r\n  let event = new CustomEvent(eventName, { detail: eventData });\r\n  eventMonitor.dispatchEvent(event);\r\n}\r\n","export const REF_INDENTIFIER = '___REF_FULLPATH_';\r\n\r\nexport interface ParsedRefDoc {\r\n  ___refpath: string;\r\n  ___refid: string;\r\n}\r\n","import { getDownloadURL, ref } from 'firebase/storage';\r\nimport { has, set } from 'lodash';\r\nimport { IFirebaseWrapper } from 'providers/database';\r\nimport { FireStoreDocumentRef } from './firebase-models';\r\nimport { REF_INDENTIFIER } from './internal.models';\r\nimport { logError } from './logger';\r\n\r\nexport interface RefDocFound {\r\n  fieldPath: string;\r\n  refDocPath: string;\r\n}\r\n\r\nexport interface FromFirestoreResult {\r\n  parsedDoc: any;\r\n  refdocs: RefDocFound[];\r\n}\r\n\r\nexport function translateDocFromFirestore(obj: any) {\r\n  const isObject = !!obj && typeof obj === 'object';\r\n  const result: FromFirestoreResult = {\r\n    parsedDoc: {},\r\n    refdocs: [],\r\n  };\r\n  if (!isObject) {\r\n    return result;\r\n  }\r\n  Object.keys(obj).map((key) => {\r\n    const value = obj[key];\r\n    obj[key] = recusivelyCheckObjectValue(value, key, result);\r\n  });\r\n  result.parsedDoc = obj;\r\n  return result;\r\n}\r\n\r\nexport function recusivelyCheckObjectValue(\r\n  input: any,\r\n  fieldPath: string,\r\n  result: FromFirestoreResult\r\n): any {\r\n  const isFalsey = !input;\r\n  if (isFalsey) {\r\n    return input;\r\n  }\r\n  const isPrimitive = typeof input !== 'object';\r\n  if (isPrimitive) {\r\n    return input;\r\n  }\r\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\r\n  if (isTimestamp) {\r\n    return input.toDate();\r\n  }\r\n  const isArray = Array.isArray(input);\r\n  if (isArray) {\r\n    return (input as any[]).map((value, index) =>\r\n      recusivelyCheckObjectValue(value, `${fieldPath}.${index}`, result)\r\n    );\r\n  }\r\n  const isDocumentReference = isInputADocReference(input);\r\n  if (isDocumentReference) {\r\n    const documentReference = input as FireStoreDocumentRef;\r\n    result.refdocs.push({\r\n      fieldPath: fieldPath,\r\n      refDocPath: documentReference.path,\r\n    });\r\n    return documentReference.id;\r\n  }\r\n  const isObject = typeof input === 'object';\r\n  if (isObject) {\r\n    Object.keys(input).map((key) => {\r\n      const value = input[key];\r\n      input[key] = recusivelyCheckObjectValue(value, key, result);\r\n    });\r\n    return input;\r\n  }\r\n  return input;\r\n}\r\n\r\nfunction isInputADocReference(input: any): boolean {\r\n  const isDocumentReference =\r\n    typeof input.id === 'string' &&\r\n    typeof input.firestore === 'object' &&\r\n    typeof input.parent === 'object' &&\r\n    typeof input.path === 'string';\r\n  return isDocumentReference;\r\n}\r\n\r\nexport function applyRefDocs(doc: any, refDocs: RefDocFound[]) {\r\n  refDocs.map((d) => {\r\n    set(doc, REF_INDENTIFIER + d.fieldPath, d.refDocPath);\r\n  });\r\n  return doc;\r\n}\r\n\r\nexport const recursivelyMapStorageUrls = async (\r\n  fireWrapper: IFirebaseWrapper,\r\n  fieldValue: any\r\n): Promise<any> => {\r\n  const isPrimitive = !fieldValue || typeof fieldValue !== 'object';\r\n  if (isPrimitive) {\r\n    return fieldValue;\r\n  }\r\n  const isFileField = has(fieldValue, 'src');\r\n  if (isFileField) {\r\n    try {\r\n      const src = await getDownloadURL(\r\n        ref(fireWrapper.storage(), fieldValue.src)\r\n      );\r\n      return {\r\n        ...fieldValue,\r\n        src,\r\n      };\r\n    } catch (error) {\r\n      logError(`Error when getting download URL`, {\r\n        error,\r\n      });\r\n      return fieldValue;\r\n    }\r\n  }\r\n  const isArray = Array.isArray(fieldValue);\r\n  if (isArray) {\r\n    return Promise.all(\r\n      (fieldValue as any[]).map(async (value, index) => {\r\n        fieldValue[index] = await recursivelyMapStorageUrls(fireWrapper, value);\r\n      })\r\n    );\r\n  }\r\n  const isDocumentReference = isInputADocReference(fieldValue);\r\n  if (isDocumentReference) {\r\n    return fieldValue;\r\n  }\r\n  const isObject = !isArray && typeof fieldValue === 'object';\r\n  if (isObject) {\r\n    return Promise.all(\r\n      Object.keys(fieldValue).map(async (key) => {\r\n        const value = fieldValue[key];\r\n        fieldValue[key] = await recursivelyMapStorageUrls(fireWrapper, value);\r\n      })\r\n    );\r\n  }\r\n};\r\n","import {\r\n  FireStoreDocumentSnapshot,\r\n  FireStoreQueryDocumentSnapshot,\r\n} from './firebase-models';\r\nimport { logWarn } from './logger';\r\nimport * as ra from './react-admin-models';\r\nimport {\r\n  applyRefDocs,\r\n  translateDocFromFirestore,\r\n} from './translate-from-firestore';\r\n\r\nexport function parseFireStoreDocument<T extends ra.Record>(\r\n  doc: FireStoreQueryDocumentSnapshot | FireStoreDocumentSnapshot | undefined\r\n): T {\r\n  if (!doc) {\r\n    logWarn('parseFireStoreDocument: no doc', { doc });\r\n    return {} as T;\r\n  }\r\n  const data = doc.data();\r\n  const result = translateDocFromFirestore(data);\r\n  const dataWithRefs = applyRefDocs(result.parsedDoc, result.refdocs);\r\n  // React Admin requires an id field on every document,\r\n  // So we can just use the firestore document id\r\n  return { id: doc.id, ...dataWithRefs } as T;\r\n}\r\n","import path from 'path-browserify';\r\n\r\nexport function getAbsolutePath(\r\n  rootRef: undefined | string | (() => string),\r\n  relativePath: string | null\r\n): string {\r\n  if (!rootRef) {\r\n    return relativePath + '';\r\n  }\r\n  if (!relativePath) {\r\n    throw new Error(\r\n      'Resource name must be a string of length greater than 0 characters'\r\n    );\r\n  }\r\n  const rootRefValue = typeof rootRef === 'string' ? rootRef : rootRef();\r\n  const withSlashes = path.join('/', rootRefValue, '/', relativePath, '/');\r\n  const slashCount = withSlashes.split('/').length - 1;\r\n  if (slashCount % 2) {\r\n    throw new Error(`The rootRef path must point to a \"document\"\r\n    not a \"collection\"e.g. /collection/document/ or\r\n    /collection/document/collection/document/`);\r\n  }\r\n  return withSlashes.slice(1, -1);\r\n}\r\n\r\nexport function joinPaths(...args: string[]) {\r\n  return path.join(...args);\r\n}\r\n","import { REF_INDENTIFIER } from './internal.models';\r\n\r\ninterface ParsedUpload {\r\n  fieldDotsPath: string;\r\n  fieldSlashesPath: string;\r\n  rawFile: File | any;\r\n}\r\n\r\ninterface ParsedDocRef {\r\n  fieldDotsPath: string;\r\n  refPath: string;\r\n}\r\n\r\ninterface ParseResult {\r\n  parsedDoc: any;\r\n  uploads: ParsedUpload[];\r\n  refdocs: ParsedDocRef[];\r\n}\r\n\r\nexport function translateDocToFirestore(obj: any): ParseResult {\r\n  const isObject = !!obj && typeof obj === 'object';\r\n  const result: ParseResult = {\r\n    uploads: [],\r\n    refdocs: [],\r\n    parsedDoc: {},\r\n  };\r\n  if (!isObject) {\r\n    return result;\r\n  }\r\n  Object.keys(obj).map((key) => {\r\n    const value = obj[key];\r\n    recusivelyParseObjectValue(value, key, result);\r\n  });\r\n  result.parsedDoc = obj;\r\n  return result;\r\n}\r\n\r\nexport function recusivelyParseObjectValue(\r\n  input: any,\r\n  fieldPath: string,\r\n  result: ParseResult\r\n): any {\r\n  const isFalsey = !input;\r\n  if (isFalsey) {\r\n    return input;\r\n  }\r\n  const isRefField =\r\n    typeof fieldPath === 'string' && fieldPath.includes(REF_INDENTIFIER);\r\n  if (isRefField) {\r\n    const refDocFullPath = input as string;\r\n    result.refdocs.push({\r\n      fieldDotsPath: fieldPath,\r\n      refPath: refDocFullPath,\r\n    });\r\n    return;\r\n  }\r\n  const isPrimitive = typeof input !== 'object';\r\n  if (isPrimitive) {\r\n    return input;\r\n  }\r\n  const isTimestamp = !!input.toDate && typeof input.toDate === 'function';\r\n  if (isTimestamp) {\r\n    return input.toDate();\r\n  }\r\n  const isArray = Array.isArray(input);\r\n  if (isArray) {\r\n    return (input as []).map((value, index) =>\r\n      recusivelyParseObjectValue(value, `${fieldPath}.${index}`, result)\r\n    );\r\n  }\r\n  const isFileField = !!input && input.hasOwnProperty('rawFile');\r\n  if (isFileField) {\r\n    result.uploads.push({\r\n      fieldDotsPath: fieldPath,\r\n      fieldSlashesPath: fieldPath.split('.').join('/'),\r\n      rawFile: input.rawFile,\r\n    });\r\n    delete input.rawFile;\r\n    return;\r\n  }\r\n  Object.keys(input).map((key) => {\r\n    const value = input[key];\r\n    recusivelyParseObjectValue(value, `${fieldPath}.${key}`, result);\r\n  });\r\n  return input;\r\n}\r\n","import { FirebaseApp, getApp, getApps, initializeApp } from 'firebase/app';\r\nimport {\r\n  browserLocalPersistence,\r\n  browserSessionPersistence,\r\n  getAuth,\r\n  inMemoryPersistence,\r\n  onAuthStateChanged,\r\n  Persistence,\r\n  signInWithEmailAndPassword,\r\n  signOut,\r\n} from 'firebase/auth';\r\nimport {\r\n  collection,\r\n  doc,\r\n  getFirestore,\r\n  serverTimestamp as firestoreServerTimestamp,\r\n  writeBatch,\r\n} from 'firebase/firestore';\r\nimport {\r\n  getDownloadURL,\r\n  getStorage,\r\n  ref,\r\n  uploadBytesResumable,\r\n} from 'firebase/storage';\r\nimport {\r\n  FireApp,\r\n  FireAuth,\r\n  FireAuthUserCredentials,\r\n  FireStorage,\r\n  FireStoragePutFileResult,\r\n  FireStore,\r\n  FireStoreBatch,\r\n  FireStoreCollectionRef,\r\n  FireUploadTaskSnapshot,\r\n  FireUser,\r\n} from 'misc/firebase-models';\r\nimport { log } from '../../../misc';\r\nimport { RAFirebaseOptions } from '../../options';\r\nimport { IFirebaseWrapper } from './IFirebaseWrapper';\r\n\r\nexport class FirebaseWrapper implements IFirebaseWrapper {\r\n  private readonly _app: FireApp;\r\n  private readonly _firestore: FireStore;\r\n  private readonly _storage: FireStorage;\r\n  private readonly _auth: FireAuth;\r\n  public options: RAFirebaseOptions;\r\n\r\n  constructor(inputOptions: RAFirebaseOptions | undefined, firebaseConfig: {}) {\r\n    const optionsSafe = inputOptions || {};\r\n    this.options = optionsSafe;\r\n    this._app = (window as any)['_app'] = ObtainFirebaseApp(\r\n      firebaseConfig,\r\n      optionsSafe\r\n    );\r\n    this._firestore = getFirestore(this._app);\r\n    this._storage = getStorage(this._app);\r\n    this._auth = getAuth(this._app);\r\n  }\r\n  dbGetCollection(absolutePath: string): FireStoreCollectionRef {\r\n    return collection(this._firestore, absolutePath);\r\n  }\r\n  dbCreateBatch(): FireStoreBatch {\r\n    return writeBatch(this._firestore);\r\n  }\r\n  dbMakeNewId(): string {\r\n    return doc(collection(this._firestore, 'collections')).id;\r\n  }\r\n\r\n  public OnUserLogout(callBack: (u: FireUser | null) => any) {\r\n    this._auth.onAuthStateChanged((user) => {\r\n      const isLoggedOut = !user;\r\n      log('FirebaseWrapper.OnUserLogout', { user, isLoggedOut });\r\n      if (isLoggedOut) {\r\n        callBack(user);\r\n      }\r\n    });\r\n  }\r\n  putFile(storagePath: string, rawFile: any): FireStoragePutFileResult {\r\n    const task = uploadBytesResumable(ref(this._storage, storagePath), rawFile);\r\n    const taskResult = new Promise<FireUploadTaskSnapshot>((res, rej) =>\r\n      task.then(res).catch(rej)\r\n    );\r\n\r\n    const downloadUrl = taskResult\r\n      .then((t) => getDownloadURL(t.ref))\r\n      .then((url) => url as string);\r\n\r\n    return {\r\n      task,\r\n      taskResult,\r\n      downloadUrl,\r\n    };\r\n  }\r\n  async getStorageDownloadUrl(fieldSrc: string): Promise<string> {\r\n    return getDownloadURL(ref(this._storage, fieldSrc));\r\n  }\r\n  public serverTimestamp() {\r\n    // This line doesn't work for some reason, might be firebase sdk.\r\n    return firestoreServerTimestamp();\r\n  }\r\n\r\n  async authSetPersistence(persistenceInput: 'session' | 'local' | 'none') {\r\n    let persistenceResolved: Persistence;\r\n    switch (persistenceInput) {\r\n      case 'local':\r\n        persistenceResolved = browserLocalPersistence;\r\n        break;\r\n      case 'none':\r\n        persistenceResolved = inMemoryPersistence;\r\n        break;\r\n      case 'session':\r\n      default:\r\n        persistenceResolved = browserSessionPersistence;\r\n        break;\r\n    }\r\n\r\n    log('setPersistence', { persistenceInput, persistenceResolved });\r\n\r\n    return this._auth\r\n      .setPersistence(persistenceResolved)\r\n      .catch((error) => console.error(error));\r\n  }\r\n  async authSigninEmailPassword(\r\n    email: string,\r\n    password: string\r\n  ): Promise<FireAuthUserCredentials> {\r\n    const user = await signInWithEmailAndPassword(this._auth, email, password);\r\n    return user;\r\n  }\r\n  async authSignOut(): Promise<void> {\r\n    return signOut(this._auth);\r\n  }\r\n  async authGetUserLoggedIn(): Promise<FireUser> {\r\n    return new Promise((resolve, reject) => {\r\n      const auth = this._auth;\r\n      if (auth.currentUser) return resolve(auth.currentUser);\r\n      const unsubscribe = onAuthStateChanged(this._auth, (user) => {\r\n        unsubscribe();\r\n        if (user) {\r\n          resolve(user);\r\n        } else {\r\n          reject();\r\n        }\r\n      });\r\n    });\r\n  }\r\n  public async GetUserLogin(): Promise<FireUser> {\r\n    return this.authGetUserLoggedIn();\r\n  }\r\n\r\n  /** @deprecated */\r\n  public auth(): FireAuth {\r\n    return this._auth;\r\n  }\r\n  /** @deprecated */\r\n  public storage(): FireStorage {\r\n    return this._storage;\r\n  }\r\n  /** @deprecated */\r\n  public GetApp(): FireApp {\r\n    return this._app;\r\n  }\r\n  /** @deprecated */\r\n  public db(): FireStore {\r\n    return this._firestore;\r\n  }\r\n}\r\n\r\nfunction ObtainFirebaseApp(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n): FirebaseApp {\r\n  if (options.app) {\r\n    return options.app;\r\n  }\r\n  const apps = getApps();\r\n\r\n  const isInitialized = !!apps?.length;\r\n\r\n  if (isInitialized) {\r\n    return getApp();\r\n  } else {\r\n    return initializeApp(firebaseConfig);\r\n  }\r\n}\r\n","import { log, logger, logWarn, retrieveStatusTxt } from '../misc';\r\nimport { FireUser } from '../misc/firebase-models';\r\nimport {\r\n  AuthProvider as RaAuthProvider,\r\n  UserIdentity,\r\n} from '../misc/react-admin-models';\r\nimport { messageTypes } from './../misc/messageTypes';\r\nimport { IFirebaseWrapper } from './database';\r\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\r\nimport { RAFirebaseOptions } from './options';\r\n\r\nclass AuthClient {\r\n  private fireWrapper: IFirebaseWrapper;\r\n\r\n  constructor(firebaseConfig: {}, optionsInput?: RAFirebaseOptions) {\r\n    const options = optionsInput || {};\r\n    log('Auth Client: initializing...', { firebaseConfig, options });\r\n    this.fireWrapper = new FirebaseWrapper(options, firebaseConfig);\r\n    options.persistence && this.setPersistence(options.persistence);\r\n  }\r\n\r\n  setPersistence(persistenceInput: 'session' | 'local' | 'none') {\r\n    return this.fireWrapper.authSetPersistence(persistenceInput);\r\n  }\r\n\r\n  public async HandleAuthLogin(params: { username: string; password: string }) {\r\n    const { username, password } = params;\r\n\r\n    if (username && password) {\r\n      try {\r\n        const user = await this.fireWrapper.authSigninEmailPassword(\r\n          username,\r\n          password\r\n        );\r\n        log('HandleAuthLogin: user sucessfully logged in', { user });\r\n        return user;\r\n      } catch (e) {\r\n        log('HandleAuthLogin: invalid credentials', { params });\r\n        throw new Error('Login error: invalid credentials');\r\n      }\r\n    } else {\r\n      return this.getUserLogin();\r\n    }\r\n  }\r\n\r\n  public HandleAuthLogout() {\r\n    return this.fireWrapper.authSignOut();\r\n  }\r\n\r\n  public HandleAuthError(errorHttp: messageTypes.HttpErrorType) {\r\n    log('HandleAuthLogin: invalid credentials', { errorHttp });\r\n    const status = !!errorHttp && errorHttp.status;\r\n    const statusTxt = retrieveStatusTxt(status);\r\n    if (statusTxt === 'ok') {\r\n      log('API is actually authenticated');\r\n      return Promise.resolve();\r\n    }\r\n    logWarn('Received authentication error from API');\r\n    return Promise.reject();\r\n  }\r\n\r\n  public async HandleAuthCheck(): Promise<any> {\r\n    return this.getUserLogin();\r\n  }\r\n\r\n  public getUserLogin(): Promise<FireUser> {\r\n    return this.fireWrapper.authGetUserLoggedIn();\r\n  }\r\n\r\n  public async HandleGetPermissions() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.claims;\r\n    } catch (e) {\r\n      log('HandleGetPermission: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetIdentity(): Promise<UserIdentity> {\r\n    try {\r\n      const { uid, displayName, photoURL } = await this.getUserLogin();\r\n      const identity: UserIdentity = {\r\n        id: uid,\r\n        fullName: `${displayName ?? ''}`,\r\n        avatar: `${photoURL ?? ''}`,\r\n      };\r\n      return identity;\r\n    } catch (e) {\r\n      log('HandleGetIdentity: no user is logged in', {\r\n        e,\r\n      });\r\n      return null as any;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTAuthTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.authTime;\r\n    } catch (e) {\r\n      log('HandleGetJWTAuthTime: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTExpirationTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.expirationTime;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTExpirationTime: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTSignInProvider() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.signInProvider;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTSignInProvider: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTIssuedAtTime() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.issuedAtTime;\r\n    } catch (e) {\r\n      log(\r\n        'HandleGetJWTIssuedAtTime: no user is logged in or tokenResult error',\r\n        {\r\n          e,\r\n        }\r\n      );\r\n      return null;\r\n    }\r\n  }\r\n\r\n  public async HandleGetJWTToken() {\r\n    try {\r\n      const user = await this.getUserLogin();\r\n      // @ts-ignore\r\n      const token = await user.getIdTokenResult();\r\n\r\n      return token.token;\r\n    } catch (e) {\r\n      log('HandleGetJWTToken: no user is logged in or tokenResult error', {\r\n        e,\r\n      });\r\n      return null;\r\n    }\r\n  }\r\n}\r\n\r\nexport function AuthProvider(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n): ReactAdminFirebaseAuthProvider {\r\n  VerifyAuthProviderArgs(firebaseConfig, options);\r\n  logger.SetEnabled(!!options?.logging);\r\n  const auth = new AuthClient(firebaseConfig, options);\r\n\r\n  const provider: ReactAdminFirebaseAuthProvider = {\r\n    // React Admin Interface\r\n    login: (params) => auth.HandleAuthLogin(params),\r\n    logout: () => auth.HandleAuthLogout(),\r\n    checkAuth: () => auth.HandleAuthCheck(),\r\n    checkError: (error) => auth.HandleAuthError(error),\r\n    getPermissions: () => auth.HandleGetPermissions(),\r\n    getIdentity: () => auth.HandleGetIdentity(),\r\n    // Custom Functions\r\n    getAuthUser: () => auth.getUserLogin(),\r\n    getJWTAuthTime: () => auth.HandleGetJWTAuthTime(),\r\n    getJWTExpirationTime: () => auth.HandleGetJWTExpirationTime(),\r\n    getJWTSignInProvider: () => auth.HandleGetJWTSignInProvider(),\r\n    getJWTClaims: () => auth.HandleGetPermissions(),\r\n    getJWTToken: () => auth.HandleGetJWTToken(),\r\n  };\r\n  return provider;\r\n}\r\n\r\nexport type ReactAdminFirebaseAuthProvider = RaAuthProvider & {\r\n  // Custom Functions\r\n  getAuthUser: () => Promise<FireUser>;\r\n  getJWTAuthTime: () => Promise<string | null>;\r\n  getJWTExpirationTime: () => Promise<string | null>;\r\n  getJWTSignInProvider: () => Promise<string | null>;\r\n  getJWTClaims: () => Promise<{ [key: string]: any } | null>;\r\n  getJWTToken: () => Promise<string | null>;\r\n};\r\n\r\nfunction VerifyAuthProviderArgs(\r\n  firebaseConfig: {},\r\n  options: RAFirebaseOptions\r\n) {\r\n  const hasNoApp = !options || !options.app;\r\n  const hasNoConfig = !firebaseConfig;\r\n  if (hasNoConfig && hasNoApp) {\r\n    throw new Error(\r\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\r\n    );\r\n  }\r\n}\r\n","// From firebase SDK\r\n\r\nimport { logError } from './logger';\r\n\r\n// tslint:disable-next-line:max-line-length\r\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\r\nexport function retrieveStatusTxt(status: number): 'ok' | 'unauthenticated' {\r\n  // Make sure any successful status is OK.\r\n  if (status >= 200 && status < 300) {\r\n    return 'ok';\r\n  }\r\n  switch (status) {\r\n    case 401: // 'unauthenticated'\r\n    case 403: // 'permission-denied'\r\n      return 'unauthenticated';\r\n\r\n    case 0: // 'internal'\r\n    case 400: // 'invalid-argument'\r\n    case 404: // 'not-found'\r\n    case 409: // 'aborted'\r\n    case 429: // 'resource-exhausted'\r\n    case 499: // 'cancelled'\r\n    case 500: // 'internal'\r\n    case 501: // 'unimplemented'\r\n    case 503: // 'unavailable'\r\n    case 504: // 'deadline-exceeded'\r\n    default:\r\n      // ignore\r\n      return 'ok';\r\n  }\r\n}\r\n\r\n// From firebase SDK\r\n// tslint:disable-next-line:max-line-length\r\n// - https://github.com/firebase/firebase-js-sdk/blob/9f109f85ad0d99f6c13e68dcb549a0b852e35a2a/packages/functions/src/api/error.ts\r\nexport function retrieveStatusCode(statusTxt: string): number {\r\n  // Make sure any successful status is OK.\r\n  const regexResult = /\\[code\\=([\\w-]*)/g.exec(statusTxt);\r\n  const status = Array.isArray(regexResult) && regexResult[1];\r\n  if (!status) {\r\n    logError('unknown StatusCode ', { statusTxt });\r\n  }\r\n  switch (status) {\r\n    case 'unauthenticated':\r\n      return 401;\r\n    case 'permission-denied':\r\n      return 403;\r\n    case 'internal':\r\n      return 0;\r\n    case 'invalid-argument':\r\n      return 400;\r\n    case 'not-found':\r\n      return 404;\r\n    case 'aborted':\r\n      return 409;\r\n    case 'resource-exhausted':\r\n      return 429;\r\n    case 'cancelled':\r\n      return 499;\r\n    case 'internal':\r\n      return 500;\r\n    case 'unimplemented':\r\n      return 501;\r\n    case 'unavailable':\r\n      return 503;\r\n    case 'deadline-exceeded':\r\n      return 504;\r\n    default:\r\n      return 200;\r\n  }\r\n}\r\n","import { doc, getDoc, getDocs } from 'firebase/firestore';\r\nimport { FireStoreCollectionRef, FireStoreQuery } from 'misc/firebase-models';\r\nimport {\r\n  getAbsolutePath,\r\n  IFirestoreLogger,\r\n  log,\r\n  logWarn,\r\n  messageTypes,\r\n  parseFireStoreDocument,\r\n} from '../../misc';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\r\n\r\ntype IResourceItem = {} & { id: string; deleted?: boolean };\r\nexport interface IResource {\r\n  path: string;\r\n  pathAbsolute: string;\r\n  collection: FireStoreCollectionRef;\r\n  list: Array<IResourceItem>;\r\n}\r\n\r\nexport class ResourceManager {\r\n  private resources: Record<string, IResource> = {};\r\n\r\n  constructor(\r\n    private fireWrapper: IFirebaseWrapper,\r\n    private options: RAFirebaseOptions,\r\n    private flogger: IFirestoreLogger\r\n  ) {\r\n    this.fireWrapper.OnUserLogout(() => {\r\n      this.resources = {};\r\n    });\r\n  }\r\n\r\n  public async TryGetResource(\r\n    resourceName: string,\r\n    refresh?: 'REFRESH',\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    if (refresh) {\r\n      await this.RefreshResource(resourceName, collectionQuery);\r\n    }\r\n    return this.TryGetResourcePromise(resourceName, collectionQuery);\r\n  }\r\n\r\n  public GetResource(relativePath: string): IResource {\r\n    const resource: IResource = this.resources[relativePath];\r\n    if (!resource) {\r\n      throw new Error(\r\n        `react-admin-firebase: Can't find resource: \"${relativePath}\"`\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  public async TryGetResourcePromise(\r\n    relativePath: string,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    log('resourceManager.TryGetResourcePromise', {\r\n      relativePath,\r\n      collectionQuery,\r\n    });\r\n    await this.initPath(relativePath);\r\n\r\n    const resource: IResource = this.resources[relativePath];\r\n    if (!resource) {\r\n      throw new Error(\r\n        `react-admin-firebase: Cant find resource: \"${relativePath}\"`\r\n      );\r\n    }\r\n    return resource;\r\n  }\r\n\r\n  public async RefreshResource(\r\n    relativePath: string,\r\n    collectionQuery: messageTypes.CollectionQueryType | undefined\r\n  ) {\r\n    if (this.options?.lazyLoading?.enabled) {\r\n      logWarn('resourceManager.RefreshResource', {\r\n        warn: 'RefreshResource is not available in lazy loading mode',\r\n      });\r\n      throw new Error(\r\n        'react-admin-firebase: RefreshResource is not available in lazy loading mode'\r\n      );\r\n    }\r\n\r\n    log('resourceManager.RefreshResource', { relativePath, collectionQuery });\r\n    await this.initPath(relativePath);\r\n    const resource = this.resources[relativePath];\r\n\r\n    const collectionRef = resource.collection;\r\n    const collectionOrQuery = this.applyQuery(collectionRef, collectionQuery);\r\n    const newDocs = await getDocs(collectionOrQuery);\r\n\r\n    newDocs.forEach((d) =>\r\n      resource.list.push(parseFireStoreDocument<IResourceItem>(d))\r\n    );\r\n\r\n    const count = newDocs.docs.length;\r\n    this.flogger.logDocument(count)();\r\n    log('resourceManager.RefreshResource', {\r\n      newDocs,\r\n      resource,\r\n      collectionPath: collectionRef.path,\r\n    });\r\n  }\r\n\r\n  public async GetSingleDoc(relativePath: string, docId: string) {\r\n    await this.initPath(relativePath);\r\n    const resource = this.GetResource(relativePath);\r\n    this.flogger.logDocument(1)();\r\n    const docSnap = await getDoc(doc(resource.collection, docId));\r\n    if (!docSnap.exists) {\r\n      throw new Error('react-admin-firebase: No id found matching: ' + docId);\r\n    }\r\n    const result = parseFireStoreDocument(docSnap);\r\n    log('resourceManager.GetSingleDoc', {\r\n      relativePath,\r\n      resource,\r\n      docId,\r\n      docSnap,\r\n      result,\r\n    });\r\n    return result;\r\n  }\r\n\r\n  private async initPath(relativePath: string): Promise<void> {\r\n    const rootRef = this.options && this.options.rootRef;\r\n    const absolutePath = getAbsolutePath(rootRef, relativePath);\r\n    const hasBeenInited = !!this.resources[relativePath];\r\n    log('resourceManager.initPath()', {\r\n      absolutePath,\r\n      hasBeenInited,\r\n    });\r\n    if (hasBeenInited) {\r\n      log('resourceManager.initPath() has been initialized already...');\r\n      return;\r\n    }\r\n    const collection = this.fireWrapper.dbGetCollection(absolutePath);\r\n    const list: Array<IResourceItem> = [];\r\n    const resource: IResource = {\r\n      collection,\r\n      list,\r\n      path: relativePath,\r\n      pathAbsolute: absolutePath,\r\n    };\r\n    this.resources[relativePath] = resource;\r\n    log('resourceManager.initPath() setting resource...', {\r\n      resource,\r\n      allResources: this.resources,\r\n      collection: collection,\r\n      collectionPath: collection.path,\r\n    });\r\n  }\r\n\r\n  public async getUserIdentifier(): Promise<string> {\r\n    const identifier = this.options.associateUsersById\r\n      ? await this.getCurrentUserId()\r\n      : await this.getCurrentUserEmail();\r\n    return identifier;\r\n  }\r\n\r\n  private async getCurrentUserEmail() {\r\n    const user = await this.fireWrapper.authGetUserLoggedIn();\r\n    if (user) {\r\n      return user.email as string;\r\n    } else {\r\n      return 'annonymous user';\r\n    }\r\n  }\r\n  private async getCurrentUserId() {\r\n    const user = await this.fireWrapper.authGetUserLoggedIn();\r\n    if (user) {\r\n      return user.uid;\r\n    } else {\r\n      return 'annonymous user';\r\n    }\r\n  }\r\n\r\n  private applyQuery(\r\n    collection: FireStoreCollectionRef,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): FireStoreCollectionRef | FireStoreQuery {\r\n    const collRef = collectionQuery ? collectionQuery(collection) : collection;\r\n\r\n    log('resourceManager.applyQuery() ...', {\r\n      collection,\r\n      collectionQuery: (collectionQuery || '-').toString(),\r\n      collRef,\r\n    });\r\n    return collRef;\r\n  }\r\n}\r\n","import { doc } from 'firebase/firestore';\r\nimport { get, set } from 'lodash';\r\nimport {\r\n  AddCreatedByFields,\r\n  AddUpdatedByFields,\r\n  dispatch,\r\n  IFirestoreLogger,\r\n  log,\r\n  logError,\r\n  parseStoragePath,\r\n  translateDocToFirestore,\r\n} from '../../misc';\r\nimport {\r\n  TASK_CANCELED,\r\n  TASK_PAUSED,\r\n  TASK_RUNNING,\r\n} from '../../misc/firebase-models';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport { IFirebaseWrapper } from './firebase/IFirebaseWrapper';\r\nimport { IResource, ResourceManager } from './ResourceManager';\r\n\r\nexport class FireClient {\r\n  public rm: ResourceManager;\r\n\r\n  constructor(\r\n    public fireWrapper: IFirebaseWrapper,\r\n    public options: RAFirebaseOptions,\r\n    public flogger: IFirestoreLogger\r\n  ) {\r\n    this.rm = new ResourceManager(this.fireWrapper, this.options, this.flogger);\r\n  }\r\n\r\n  public checkRemoveIdField(obj: any, docId: string) {\r\n    if (!this.options.dontAddIdFieldToDoc) {\r\n      obj.id = docId;\r\n    }\r\n  }\r\n\r\n  public transformToDb(\r\n    resourceName: string,\r\n    documentData: any,\r\n    docId: string\r\n  ): any {\r\n    if (typeof this.options.transformToDb === 'function') {\r\n      return this.options.transformToDb(resourceName, documentData, docId);\r\n    }\r\n    return documentData;\r\n  }\r\n\r\n  public async parseDataAndUpload(r: IResource, id: string, data: any) {\r\n    if (!data) {\r\n      return data;\r\n    }\r\n    const docPath = doc(r.collection, id).path;\r\n\r\n    const result = translateDocToFirestore(data);\r\n    const uploads = result.uploads;\r\n    await Promise.all(\r\n      uploads.map(async (u) => {\r\n        const storagePath = parseStoragePath(\r\n          u.rawFile,\r\n          docPath,\r\n          u.fieldDotsPath,\r\n          !!this.options.useFileNamesInStorage\r\n        );\r\n        const link = await this.saveFile(storagePath, u.rawFile);\r\n        set(data, u.fieldDotsPath + '.src', link);\r\n      })\r\n    );\r\n    return data;\r\n  }\r\n\r\n  public async addCreatedByFields(obj: any) {\r\n    return AddCreatedByFields(obj, this.fireWrapper, this.rm, this.options);\r\n  }\r\n\r\n  public async addUpdatedByFields(obj: any) {\r\n    return AddUpdatedByFields(obj, this.fireWrapper, this.rm, this.options);\r\n  }\r\n\r\n  private async saveFile(\r\n    storagePath: string,\r\n    rawFile: any\r\n  ): Promise<string | undefined> {\r\n    log('saveFile() saving file...', { storagePath, rawFile });\r\n    try {\r\n      const { task, taskResult, downloadUrl } = this.fireWrapper.putFile(\r\n        storagePath,\r\n        rawFile\r\n      );\r\n      const { name } = rawFile;\r\n      // monitor upload status & progress\r\n      dispatch('FILE_UPLOAD_WILL_START', name);\r\n      task.on('state_changed', (snapshot) => {\r\n        const progress =\r\n          (snapshot.bytesTransferred / snapshot.totalBytes) * 100;\r\n        log('Upload is ' + progress + '% done');\r\n        dispatch('FILE_UPLOAD_PROGRESS', name, progress);\r\n        switch (snapshot.state) {\r\n          case TASK_PAUSED:\r\n            log('Upload is paused');\r\n            dispatch('FILE_UPLOAD_PAUSED', name);\r\n            break;\r\n          case TASK_RUNNING:\r\n            log('Upload is running');\r\n            dispatch('FILE_UPLOAD_RUNNING', name);\r\n            break;\r\n          case TASK_CANCELED:\r\n            log('Upload has been canceled');\r\n            dispatch('FILE_UPLOAD_CANCELED', name);\r\n            break;\r\n          // case storage.TaskState.ERROR:\r\n          // already handled by catch\r\n          // case storage.TaskState.SUCCESS:\r\n          // already handled by then\r\n        }\r\n      });\r\n      const [getDownloadURL] = await Promise.all([downloadUrl, taskResult]);\r\n      dispatch('FILE_UPLOAD_COMPLETE', name);\r\n      dispatch('FILE_SAVED', name);\r\n      log('saveFile() saved file', {\r\n        storagePath,\r\n        taskResult,\r\n        getDownloadURL,\r\n      });\r\n      return this.options.relativeFilePaths ? storagePath : getDownloadURL;\r\n    } catch (storageError) {\r\n      if (get(storageError, 'code') === 'storage/unknown') {\r\n        logError(\r\n          'saveFile() error saving file, No bucket found! Try clicking \"Get Started\" in firebase -> storage',\r\n          { storageError }\r\n        );\r\n      } else {\r\n        logError('saveFile() error saving file', {\r\n          storageError,\r\n        });\r\n      }\r\n    }\r\n  }\r\n}\r\n","import { joinPaths } from './pathHelper';\r\n\r\nexport function parseStoragePath(\r\n  rawFile: File,\r\n  docPath: string,\r\n  fieldPath: string,\r\n  useFileName: boolean\r\n): string {\r\n  const fileNameBits = rawFile instanceof File ? rawFile.name.split('.') : [];\r\n\r\n  const fileExtension = !fileNameBits?.length ? '' : '.' + fileNameBits.pop();\r\n\r\n  return useFileName\r\n    ? joinPaths(docPath, fieldPath, rawFile.name)\r\n    : joinPaths(docPath, fieldPath + fileExtension);\r\n}\r\n","import { RAFirebaseOptions } from 'index';\r\nimport { IFirebaseWrapper, ResourceManager } from 'providers/database';\r\n\r\nexport async function AddCreatedByFields(\r\n  obj: any,\r\n  fireWrapper: IFirebaseWrapper,\r\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\r\n  options: Pick<\r\n    RAFirebaseOptions,\r\n    | 'associateUsersById'\r\n    | 'disableMeta'\r\n    | 'renameMetaFields'\r\n    | 'metaFieldCasing'\r\n  >\r\n) {\r\n  if (options.disableMeta) {\r\n    return;\r\n  }\r\n  const currentUserIdentifier = await rm.getUserIdentifier();\r\n  const createAtSelector = GetSelectorsCreateAt(options);\r\n  const createBySelector = GetSelectorsCreateBy(options);\r\n  obj[createAtSelector] = fireWrapper.serverTimestamp();\r\n  obj[createBySelector] = currentUserIdentifier;\r\n}\r\n\r\nexport async function AddUpdatedByFields(\r\n  obj: any,\r\n  fireWrapper: IFirebaseWrapper,\r\n  rm: Pick<ResourceManager, 'getUserIdentifier'>,\r\n  options: Pick<\r\n    RAFirebaseOptions,\r\n    | 'associateUsersById'\r\n    | 'disableMeta'\r\n    | 'renameMetaFields'\r\n    | 'metaFieldCasing'\r\n  >\r\n) {\r\n  if (options.disableMeta) {\r\n    return;\r\n  }\r\n  const currentUserIdentifier = await rm.getUserIdentifier();\r\n  const updateAtSelector = GetSelectorsUpdateAt(options);\r\n  const updateBySelector = GetSelectorsUpdateBy(options);\r\n  obj[updateAtSelector] = fireWrapper.serverTimestamp();\r\n  obj[updateBySelector] = currentUserIdentifier;\r\n}\r\n\r\nexport function GetSelectorsUpdateAt(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.updated_at) {\r\n    return options.renameMetaFields.updated_at;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'lastupdate';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'lastUpdate';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'last_update';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'LastUpdate';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'last-update';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsUpdateBy(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.updated_by) {\r\n    return options.renameMetaFields.updated_by;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'updatedby';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'updatedBy';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'updated_by';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'UpdatedBy';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'updated-by';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsCreateAt(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.created_at) {\r\n    return options.renameMetaFields.created_at;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'createdate';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'createDate';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'create_date';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'CreateDate';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'create-date';\r\n  }\r\n  return defautCase;\r\n}\r\n\r\nexport function GetSelectorsCreateBy(\r\n  options: Pick<RAFirebaseOptions, 'metaFieldCasing' | 'renameMetaFields'>\r\n): string {\r\n  if (options.renameMetaFields && options.renameMetaFields.created_by) {\r\n    return options.renameMetaFields.created_by;\r\n  }\r\n  const casing = options.metaFieldCasing;\r\n  const defautCase = 'createdby';\r\n  if (!casing) {\r\n    return defautCase;\r\n  }\r\n  if (casing === 'camel') {\r\n    return 'createdBy';\r\n  }\r\n  if (casing === 'snake') {\r\n    return 'created_by';\r\n  }\r\n  if (casing === 'pascal') {\r\n    return 'CreatedBy';\r\n  }\r\n  if (casing === 'kebab') {\r\n    return 'created-by';\r\n  }\r\n  return defautCase;\r\n}\r\n","import { FirebaseApp } from 'firebase/app';\r\nimport { Auth, User, UserCredential } from 'firebase/auth';\r\nimport {\r\n  CollectionReference,\r\n  DocumentData,\r\n  DocumentReference,\r\n  DocumentSnapshot,\r\n  FieldValue,\r\n  Firestore,\r\n  OrderByDirection,\r\n  Query,\r\n  QueryDocumentSnapshot,\r\n  WriteBatch,\r\n} from 'firebase/firestore';\r\nimport {\r\n  FirebaseStorage,\r\n  StorageReference,\r\n  TaskState,\r\n  UploadTask,\r\n  UploadTaskSnapshot,\r\n} from 'firebase/storage';\r\n\r\nexport type FireUser = User;\r\nexport type FireApp = FirebaseApp;\r\n\r\nexport type FireStorage = FirebaseStorage;\r\nexport type FireStorageReference = StorageReference;\r\nexport type FireUploadTaskSnapshot = UploadTaskSnapshot;\r\nexport type FireUploadTask = UploadTask;\r\nexport type FireStoragePutFileResult = {\r\n  task: FireUploadTask;\r\n  taskResult: Promise<FireUploadTaskSnapshot>;\r\n  downloadUrl: Promise<string>;\r\n};\r\n\r\nexport type FireAuth = Auth;\r\nexport type FireAuthUserCredentials = UserCredential;\r\n\r\nexport type FireStore = Firestore;\r\nexport type FireStoreBatch = WriteBatch;\r\nexport type FireStoreTimeStamp = FieldValue;\r\nexport type FireStoreDocumentRef = DocumentReference;\r\nexport type FireStoreDocumentSnapshot = DocumentSnapshot<DocumentData>;\r\nexport type FireStoreCollectionRef = CollectionReference;\r\nexport type FireStoreQueryDocumentSnapshot = QueryDocumentSnapshot;\r\nexport type FireStoreQuery = Query;\r\nexport type FireStoreQueryOrder = OrderByDirection;\r\n\r\nexport const TASK_PAUSED = 'paused' as TaskState;\r\nexport const TASK_RUNNING = 'running' as TaskState;\r\nexport const TASK_CANCELED = 'cancelled' as TaskState;\r\n","import {\r\n  doc,\r\n  getDoc,\r\n  getDocs,\r\n  limit,\r\n  query,\r\n  QueryConstraint,\r\n  startAfter,\r\n  startAt,\r\n} from 'firebase/firestore';\r\nimport { ref } from 'firebase/storage';\r\nimport {\r\n  FireStoreCollectionRef,\r\n  FireStoreDocumentSnapshot,\r\n  FireStoreQuery,\r\n} from 'misc/firebase-models';\r\nimport { IFirestoreLogger, messageTypes } from '../../misc';\r\n\r\nexport function setQueryCursor(\r\n  document: FireStoreDocumentSnapshot,\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string\r\n) {\r\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\r\n  localStorage.setItem(key, document.id);\r\n\r\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\r\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\r\n  if (!localCursorKeys) {\r\n    localStorage.setItem(allCursorsKey, JSON.stringify([key]));\r\n  } else {\r\n    const cursors: string[] = JSON.parse(localCursorKeys);\r\n    const newCursors = cursors.concat(key);\r\n    localStorage.setItem(allCursorsKey, JSON.stringify(newCursors));\r\n  }\r\n}\r\n\r\nexport async function getQueryCursor(\r\n  collection: FireStoreCollectionRef,\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n): Promise<FireStoreDocumentSnapshot | false> {\r\n  const key = btoa(JSON.stringify({ ...params, resourceName }));\r\n  const docId = localStorage.getItem(key);\r\n  if (!docId) {\r\n    return false;\r\n  }\r\n\r\n  const docSnapshot = await getDoc(doc(collection, docId));\r\n  flogger.logDocument(1)();\r\n  if (docSnapshot.exists()) {\r\n    return docSnapshot;\r\n  }\r\n  return false;\r\n}\r\n\r\nexport function clearQueryCursors(resourceName: string) {\r\n  const allCursorsKey = `ra-firebase-cursor-keys_${resourceName}`;\r\n  const localCursorKeys = localStorage.getItem(allCursorsKey);\r\n  if (localCursorKeys) {\r\n    const cursors: string[] = JSON.parse(localCursorKeys);\r\n    cursors.forEach((cursor) => localStorage.removeItem(cursor));\r\n    localStorage.removeItem(allCursorsKey);\r\n  }\r\n}\r\n\r\nexport async function findLastQueryCursor(\r\n  collection: FireStoreCollectionRef,\r\n  queryConstraints: QueryConstraint[],\r\n  params: messageTypes.IParamsGetList,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n) {\r\n  const { page, perPage } = params.pagination;\r\n\r\n  let lastQueryCursor: FireStoreDocumentSnapshot | false = false;\r\n  let currentPage = page - 1;\r\n\r\n  const currentPageParams = {\r\n    ...params,\r\n    pagination: {\r\n      ...params.pagination,\r\n    },\r\n  };\r\n  while (!lastQueryCursor && currentPage > 1) {\r\n    currentPage--;\r\n    currentPageParams.pagination.page = currentPage;\r\n    console.log('getting query cursor currentPage=', currentPage);\r\n    lastQueryCursor = await getQueryCursor(\r\n      collection,\r\n      currentPageParams,\r\n      resourceName,\r\n      flogger\r\n    );\r\n  }\r\n  const pageLimit = (page - currentPage) * perPage;\r\n  const isFirst = currentPage === 1;\r\n\r\n  function getQuery() {\r\n    if (isFirst) {\r\n      return query(collection, ...[...queryConstraints, limit(pageLimit)]);\r\n    } else {\r\n      return query(\r\n        collection,\r\n        ...[...queryConstraints, startAfter(lastQueryCursor), limit(pageLimit)]\r\n      );\r\n    }\r\n  }\r\n\r\n  const newQuery = getQuery();\r\n  const snapshots = await getDocs(newQuery);\r\n  const docsLength = snapshots.docs.length;\r\n  flogger.logDocument(docsLength)();\r\n  const lastDocIndex = docsLength - 1;\r\n  const lastDocRef = snapshots.docs[lastDocIndex];\r\n  return lastDocRef;\r\n}\r\n","import {\r\n  getDocs,\r\n  limit,\r\n  orderBy,\r\n  query,\r\n  QueryConstraint,\r\n  startAfter,\r\n  where,\r\n} from 'firebase/firestore';\r\nimport {\r\n  FireStoreCollectionRef,\r\n  FireStoreQuery,\r\n  FireStoreQueryOrder,\r\n} from 'misc/firebase-models';\r\nimport { IFirestoreLogger, messageTypes } from '../../misc';\r\nimport { findLastQueryCursor, getQueryCursor } from './queryCursors';\r\n\r\ninterface ParamsToQueryOptions {\r\n  filters?: boolean;\r\n  sort?: boolean;\r\n  pagination?: boolean;\r\n}\r\n\r\ninterface QueryPair {\r\n  noPagination: FireStoreQuery;\r\n  withPagination: FireStoreQuery;\r\n}\r\n\r\nconst defaultParamsToQueryOptions = {\r\n  filters: true,\r\n  sort: true,\r\n  pagination: true,\r\n};\r\n\r\nexport async function paramsToQuery<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(\r\n  collection: FireStoreCollectionRef,\r\n  params: TParams,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger,\r\n  options: ParamsToQueryOptions = defaultParamsToQueryOptions\r\n): Promise<QueryPair> {\r\n  const filterConstraints = options.filters\r\n    ? getFiltersConstraints(params.filter)\r\n    : [];\r\n\r\n  const sortConstraints = options.sort ? getSortConstraints(params.sort) : [];\r\n\r\n  const paginationConstraints = options.pagination\r\n    ? await getPaginationConstraints(\r\n        collection,\r\n        [...filterConstraints, ...sortConstraints],\r\n        params,\r\n        resourceName,\r\n        flogger\r\n      )\r\n    : [];\r\n\r\n  return {\r\n    noPagination: query(\r\n      collection,\r\n      ...[...filterConstraints, ...sortConstraints]\r\n    ),\r\n    withPagination: query(\r\n      collection,\r\n      ...[...filterConstraints, ...sortConstraints, ...paginationConstraints]\r\n    ),\r\n  };\r\n}\r\n\r\nexport function getFiltersConstraints(filters: {\r\n  [fieldName: string]: any;\r\n}): QueryConstraint[] {\r\n  const queries = Object.entries(filters).flatMap(([fieldName, fieldValue]) => {\r\n    if (typeof fieldValue === 'object') {\r\n      return Object.entries(fieldValue).flatMap(\r\n        ([key, value]: [key: string, value: any]) => {\r\n          console.log(key);\r\n          if (key == 'equals') return [where(fieldName, '==', value)];\r\n          if (key == 'notEquals') return [where(fieldName, '!=', value)];\r\n          if (key == 'gte') return [where(fieldName, '>=', value)];\r\n          if (key == 'gt') return [where(fieldName, '>', value)];\r\n          if (key == 'lte') return [where(fieldName, '<=', value)];\r\n          if (key == 'lt') return [where(fieldName, '<', value)];\r\n          if (key == 'array-contains')\r\n            return [where(fieldName, 'array-contains', value)];\r\n          if (key == 'array-contains-any')\r\n            return [where(fieldName, 'array-contains-any', value)];\r\n          if (key == 'in') return [where(fieldName, 'in', value)];\r\n          if (key == 'not-in') return [where(fieldName, 'not-in', value)];\r\n          if (key == 'contains')\r\n            return [\r\n              where(fieldName, '>=', value.toLocaleLowerCase()),\r\n              where(fieldName, '<=', `${value.toLocaleLowerCase()}\\uf8ff`),\r\n            ];\r\n          return [where(fieldName, '==', value)];\r\n        }\r\n      );\r\n    } else {\r\n      return [where(fieldName, '==', fieldValue)];\r\n    }\r\n  });\r\n  console.log(queries);\r\n  return queries;\r\n}\r\nexport function getSortConstraints(sort: {\r\n  field: string;\r\n  order: string;\r\n}): QueryConstraint[] {\r\n  if (sort != null && sort.field !== 'id') {\r\n    const { field, order } = sort;\r\n    const parsedOrder = order.toLocaleLowerCase() as FireStoreQueryOrder;\r\n    return [orderBy(field, parsedOrder)];\r\n  }\r\n  return [];\r\n}\r\n\r\nasync function getPaginationConstraints<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(\r\n  collectionRef: FireStoreCollectionRef,\r\n  queryConstraints: QueryConstraint[],\r\n  params: TParams,\r\n  resourceName: string,\r\n  flogger: IFirestoreLogger\r\n): Promise<QueryConstraint[]> {\r\n  const { page, perPage } = params.pagination;\r\n\r\n  if (page === 1) {\r\n    return [limit(perPage)];\r\n  } else {\r\n    let queryCursor = await getQueryCursor(\r\n      collectionRef,\r\n      params,\r\n      resourceName,\r\n      flogger\r\n    );\r\n    if (!queryCursor) {\r\n      queryCursor = await findLastQueryCursor(\r\n        collectionRef,\r\n        queryConstraints,\r\n        params,\r\n        resourceName,\r\n        flogger\r\n      );\r\n    }\r\n    return [startAfter(queryCursor), limit(perPage)];\r\n  }\r\n}\r\n\r\nexport function getFullParamsForQuery<\r\n  TParams extends messageTypes.IParamsGetList\r\n>(reactAdminParams: TParams, softdeleteEnabled: boolean): TParams {\r\n  return {\r\n    ...reactAdminParams,\r\n    filter: softdeleteEnabled\r\n      ? {\r\n          deleted: false,\r\n          ...reactAdminParams.filter,\r\n        }\r\n      : reactAdminParams.filter,\r\n  };\r\n}\r\n\r\nexport function getNextPageParams<TParams extends messageTypes.IParamsGetList>(\r\n  params: TParams\r\n): TParams {\r\n  return {\r\n    ...params,\r\n    pagination: {\r\n      ...params.pagination,\r\n      page: params.pagination.page + 1,\r\n    },\r\n  };\r\n}\r\n","import { getCountFromServer, getDocs } from 'firebase/firestore';\r\nimport {\r\n  log,\r\n  messageTypes,\r\n  parseFireStoreDocument,\r\n  recursivelyMapStorageUrls,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient, IResource, ResourceManager } from '../database';\r\nimport { RAFirebaseOptions } from '../options';\r\nimport {\r\n  getFullParamsForQuery,\r\n  getNextPageParams,\r\n  paramsToQuery,\r\n} from './paramsToQuery';\r\nimport { setQueryCursor } from './queryCursors';\r\n\r\nexport class FirebaseLazyLoadingClient {\r\n  constructor(\r\n    private readonly options: RAFirebaseOptions,\r\n    private readonly rm: ResourceManager,\r\n    private client: FireClient\r\n  ) {}\r\n\r\n  public async apiGetList<T extends ra.Record>(\r\n    resourceName: string,\r\n    reactAdminParams: ra.GetListParams\r\n  ): Promise<ra.GetListResult<T>> {\r\n    const r = await this.tryGetResource(resourceName);\r\n    const params = getFullParamsForQuery(\r\n      reactAdminParams,\r\n      !!this.options.softDelete\r\n    );\r\n\r\n    log('apiGetListLazy', { resourceName, params });\r\n\r\n    const { noPagination, withPagination } = await paramsToQuery(\r\n      r.collection,\r\n      params,\r\n      resourceName,\r\n      this.client.flogger\r\n    );\r\n\r\n    const snapshots = await getDocs(withPagination);\r\n\r\n    const resultsCount = snapshots.docs.length;\r\n    if (!resultsCount) {\r\n      log('apiGetListLazy', {\r\n        message: 'There are not records for given query',\r\n      });\r\n      return { data: [], total: 0 };\r\n    }\r\n    this.client.flogger.logDocument(resultsCount)();\r\n\r\n    // tslint:disable-next-line\r\n    const data = snapshots.docs.map((d) => parseFireStoreDocument<T>(d));\r\n\r\n    const nextPageCursor = snapshots.docs[snapshots.docs.length - 1];\r\n    // After fetching documents save queryCursor for next page\r\n    setQueryCursor(nextPageCursor, getNextPageParams(params), resourceName);\r\n    // Hardcoded to allow next pages, as we don't have total number of items\r\n\r\n    let total = await getCountFromServer(noPagination);\r\n\r\n    if (this.options.relativeFilePaths) {\r\n      const parsedData = await Promise.all(\r\n        data.map(async (doc: any) => {\r\n          for (let fieldName in doc) {\r\n            doc[fieldName] = await recursivelyMapStorageUrls(\r\n              this.client.fireWrapper,\r\n              doc[fieldName]\r\n            );\r\n          }\r\n          return doc;\r\n        })\r\n      );\r\n\r\n      log('apiGetListLazy result', {\r\n        docs: parsedData,\r\n        resource: r,\r\n        collectionPath: r.collection.path,\r\n      });\r\n\r\n      return {\r\n        data: parsedData,\r\n        total: total.data().count,\r\n      };\r\n    }\r\n\r\n    log('apiGetListLazy result', {\r\n      docs: data,\r\n      resource: r,\r\n      collectionPath: r.collection.path,\r\n    });\r\n\r\n    return { data, total: total.data().count };\r\n  }\r\n\r\n  public async apiGetManyReference(\r\n    resourceName: string,\r\n    reactAdminParams: messageTypes.IParamsGetManyReference\r\n  ): Promise<messageTypes.IResponseGetManyReference> {\r\n    const r = await this.tryGetResource(resourceName);\r\n    log('apiGetManyReferenceLazy', {\r\n      resourceName,\r\n      resource: r,\r\n      reactAdminParams,\r\n    });\r\n    const filterWithTarget = {\r\n      ...reactAdminParams.filter,\r\n      [reactAdminParams.target]: reactAdminParams.id,\r\n    };\r\n    const params = getFullParamsForQuery(\r\n      {\r\n        ...reactAdminParams,\r\n        filter: filterWithTarget,\r\n      },\r\n      !!this.options.softDelete\r\n    );\r\n\r\n    const { withPagination } = await paramsToQuery(\r\n      r.collection,\r\n      params,\r\n      resourceName,\r\n      this.client.flogger\r\n    );\r\n\r\n    const snapshots = await getDocs(withPagination);\r\n    const resultsCount = snapshots.docs.length;\r\n    this.client.flogger.logDocument(resultsCount)();\r\n    const data = snapshots.docs.map(parseFireStoreDocument);\r\n    if (this.options.relativeFilePaths) {\r\n      const parsedData = await Promise.all(\r\n        data.map(async (doc: any) => {\r\n          for (let fieldName in doc) {\r\n            doc[fieldName] = await recursivelyMapStorageUrls(\r\n              this.client.fireWrapper,\r\n              doc[fieldName]\r\n            );\r\n          }\r\n          return doc;\r\n        })\r\n      );\r\n\r\n      log('apiGetManyReferenceLazy result', {\r\n        docs: parsedData,\r\n        resource: r,\r\n        collectionPath: r.collection.path,\r\n      });\r\n\r\n      return {\r\n        data: parsedData,\r\n        total: data.length,\r\n      };\r\n    }\r\n\r\n    log('apiGetManyReferenceLazy result', {\r\n      docs: data,\r\n      resource: r,\r\n      collectionPath: r.collection.path,\r\n    });\r\n    return { data, total: data.length };\r\n  }\r\n\r\n  private async tryGetResource(\r\n    resourceName: string,\r\n    collectionQuery?: messageTypes.CollectionQueryType\r\n  ): Promise<IResource> {\r\n    return this.rm.TryGetResourcePromise(resourceName, collectionQuery);\r\n  }\r\n}\r\n","import {\r\n  getAbsolutePath,\r\n  log,\r\n  logError,\r\n  logger,\r\n  MakeFirestoreLogger,\r\n  retrieveStatusCode,\r\n} from '../misc';\r\nimport { FireApp } from '../misc/firebase-models';\r\nimport * as ra from '../misc/react-admin-models';\r\nimport { Create, Delete, DeleteMany, Update, UpdateMany } from './commands';\r\nimport { FirebaseWrapper } from './database/firebase/FirebaseWrapper';\r\nimport { FireClient } from './database/FireClient';\r\nimport { RAFirebaseOptions } from './options';\r\nimport { GetList, GetMany, GetManyReference, GetOne } from './queries';\r\n\r\nexport interface IDataProvider extends ra.DataProvider {\r\n  app: FireApp;\r\n}\r\n\r\nexport function DataProvider(\r\n  firebaseConfig: {},\r\n  optionsInput?: RAFirebaseOptions\r\n): IDataProvider {\r\n  const options = optionsInput || {};\r\n  verifyDataProviderArgs(firebaseConfig, options);\r\n\r\n  const flogger = MakeFirestoreLogger(options);\r\n  logger.SetEnabled(!!options?.logging);\r\n  flogger.SetEnabled(!!options?.firestoreCostsLogger?.enabled);\r\n  flogger.ResetCount(!options?.firestoreCostsLogger?.persistCount);\r\n  log('Creating FirebaseDataProvider', {\r\n    firebaseConfig,\r\n    options,\r\n  });\r\n\r\n  const fireWrapper = new FirebaseWrapper(optionsInput, firebaseConfig);\r\n\r\n  async function run<T>(cb: () => Promise<T>) {\r\n    let res: any;\r\n    try {\r\n      res = await cb();\r\n      return res;\r\n    } catch (error) {\r\n      const errorMsg = ((error as any) || '').toString();\r\n      const code = retrieveStatusCode(errorMsg);\r\n      const errorObj = { status: code, message: errorMsg, json: res };\r\n      logError('DataProvider:', error, { errorMsg, code, errorObj });\r\n      throw errorObj;\r\n    }\r\n  }\r\n  const client = new FireClient(fireWrapper, options, flogger);\r\n\r\n  const newProviderApi: IDataProvider = {\r\n    app: fireWrapper.GetApp(),\r\n    getList<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetListParams\r\n    ): Promise<ra.GetListResult<RecordType>> {\r\n      return run(() => GetList<RecordType>(resource, params, client));\r\n    },\r\n    getOne<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetOneParams\r\n    ): Promise<ra.GetOneResult<RecordType>> {\r\n      return run(() => GetOne<RecordType>(resource, params, client));\r\n    },\r\n    getMany<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetManyParams\r\n    ): Promise<ra.GetManyResult<RecordType>> {\r\n      return run(() => GetMany<RecordType>(resource, params, client));\r\n    },\r\n    getManyReference<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.GetManyReferenceParams\r\n    ): Promise<ra.GetManyReferenceResult<RecordType>> {\r\n      return run(() => GetManyReference<RecordType>(resource, params, client));\r\n    },\r\n    update<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.UpdateParams\r\n    ): Promise<ra.UpdateResult<RecordType>> {\r\n      return run(() => Update<RecordType>(resource, params, client));\r\n    },\r\n    updateMany(\r\n      resource: string,\r\n      params: ra.UpdateManyParams\r\n    ): Promise<ra.UpdateManyResult> {\r\n      return run(() => UpdateMany(resource, params, client));\r\n    },\r\n    create<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.CreateParams\r\n    ): Promise<ra.CreateResult<RecordType>> {\r\n      return run(() => Create<RecordType>(resource, params, client));\r\n    },\r\n    delete<RecordType extends ra.Record = ra.Record>(\r\n      resource: string,\r\n      params: ra.DeleteParams\r\n    ): Promise<ra.DeleteResult<RecordType>> {\r\n      return run(() => Delete(resource, params, client));\r\n    },\r\n    deleteMany(\r\n      resource: string,\r\n      params: ra.DeleteManyParams\r\n    ): Promise<ra.DeleteManyResult> {\r\n      return run(() => DeleteMany(resource, params, client));\r\n    },\r\n  };\r\n\r\n  return newProviderApi;\r\n}\r\n\r\nfunction verifyDataProviderArgs(\r\n  firebaseConfig: {},\r\n  options?: RAFirebaseOptions\r\n) {\r\n  const hasNoApp = !options || !options.app;\r\n  const hasNoConfig = !firebaseConfig;\r\n  if (hasNoConfig && hasNoApp) {\r\n    throw new Error(\r\n      'Please pass the Firebase firebaseConfig object or options.app to the FirebaseAuthProvider'\r\n    );\r\n  }\r\n  if (options && options.rootRef) {\r\n    // Will throw error if rootRef doesn't point to a document\r\n    getAbsolutePath(options.rootRef, 'test');\r\n  }\r\n}\r\n","import {\r\n  filterArray,\r\n  log,\r\n  recursivelyMapStorageUrls,\r\n  sortArray,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\nimport { FirebaseLazyLoadingClient } from '../lazy-loading/FirebaseLazyLoadingClient';\r\n\r\nexport async function GetList<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetListParams,\r\n  client: FireClient\r\n): Promise<ra.GetListResult<T>> {\r\n  log('GetList', { resourceName, params });\r\n  const { rm, fireWrapper, options } = client;\r\n\r\n  if (options?.lazyLoading?.enabled) {\r\n    const lazyClient = new FirebaseLazyLoadingClient(options, rm, client);\r\n    return lazyClient.apiGetList<T>(resourceName, params);\r\n  }\r\n\r\n  const filterSafe = params.filter || {};\r\n\r\n  const collectionQuery = filterSafe.collectionQuery;\r\n  delete filterSafe.collectionQuery;\r\n\r\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\r\n  const data = r.list;\r\n  if (params.sort != null) {\r\n    const { field, order } = params.sort;\r\n    if (order === 'ASC') {\r\n      sortArray(data, field, 'asc');\r\n    } else {\r\n      sortArray(data, field, 'desc');\r\n    }\r\n  }\r\n  let softDeleted = data;\r\n  if (options.softDelete && !Object.keys(filterSafe).includes('deleted')) {\r\n    softDeleted = data.filter((doc) => !doc.deleted);\r\n  }\r\n  const filteredData = filterArray(softDeleted, filterSafe);\r\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\r\n  const pageEnd = pageStart + params.pagination.perPage;\r\n  const dataPage = filteredData.slice(pageStart, pageEnd) as T[];\r\n  const total = filteredData.length;\r\n\r\n  if (options.relativeFilePaths) {\r\n    const fetchedData = await Promise.all(\r\n      dataPage.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\r\n    );\r\n    return {\r\n      data: fetchedData,\r\n      total,\r\n    };\r\n  }\r\n\r\n  return {\r\n    data: dataPage,\r\n    total,\r\n  };\r\n}\r\n","import { log, translateDocFromFirestore } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetOne<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetOneParams,\r\n  client: FireClient\r\n): Promise<ra.GetOneResult<T>> {\r\n  log('GetOne', { resourceName, params });\r\n  const { rm } = client;\r\n  try {\r\n    const id = params.id + '';\r\n    const dataSingle = await rm.GetSingleDoc(resourceName, id);\r\n    client.flogger.logDocument(1)();\r\n    return { data: dataSingle as T };\r\n  } catch (error) {\r\n    throw new Error(\r\n      'Error getting id: ' + params.id + ' from collection: ' + resourceName\r\n    );\r\n  }\r\n}\r\n","import { doc, getDoc } from 'firebase/firestore';\r\nimport { log, recursivelyMapStorageUrls } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetMany<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetManyParams,\r\n  client: FireClient\r\n): Promise<ra.GetManyResult<T>> {\r\n  const { rm, options, fireWrapper } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  const ids = params.ids;\r\n  log('GetMany', { resourceName, resource: r, params, ids });\r\n  const matchDocSnaps = await Promise.all(\r\n    ids.map((idObj) => {\r\n      if (typeof idObj === 'string') {\r\n        return getDoc(doc(r.collection, idObj));\r\n      }\r\n      // Will get and resolve reference documents into the current doc\r\n      return getDoc(doc(r.collection, (idObj as any)['___refid']));\r\n    })\r\n  );\r\n  client.flogger.logDocument(ids.length)();\r\n  const matches = matchDocSnaps.map(\r\n    (snap) => ({ ...snap.data(), id: snap.id } as T)\r\n  );\r\n  const permittedData = options.softDelete\r\n    ? matches.filter((row) => !row['deleted'])\r\n    : matches;\r\n  if (options.relativeFilePaths) {\r\n    const data = await Promise.all(\r\n      permittedData.map((d) => recursivelyMapStorageUrls(fireWrapper, d))\r\n    );\r\n    return {\r\n      data,\r\n    };\r\n  }\r\n\r\n  return {\r\n    data: permittedData,\r\n  };\r\n}\r\n","import {\r\n  filterArray,\r\n  log,\r\n  recursivelyMapStorageUrls,\r\n  sortArray,\r\n} from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function GetManyReference<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.GetManyReferenceParams,\r\n  client: FireClient\r\n): Promise<ra.GetManyReferenceResult<T>> {\r\n  const { rm, options, fireWrapper } = client;\r\n  log('GetManyReference', { resourceName, params });\r\n  const filterSafe = params.filter || {};\r\n  const collectionQuery = filterSafe.collectionQuery;\r\n  const r = await rm.TryGetResource(resourceName, 'REFRESH', collectionQuery);\r\n  delete filterSafe.collectionQuery;\r\n  log('apiGetManyReference', { resourceName, resource: r, params });\r\n  const data = r.list;\r\n  const targetField = params.target;\r\n  const targetValue = params.id;\r\n  let softDeleted = data;\r\n  if (options.softDelete) {\r\n    softDeleted = data.filter((doc) => !doc['deleted']);\r\n  }\r\n  const filteredData = filterArray(softDeleted, filterSafe);\r\n  const targetIdFilter: Record<string, ra.Identifier> = {};\r\n  targetIdFilter[targetField] = targetValue;\r\n  const permittedData = filterArray(filteredData, targetIdFilter);\r\n  if (params.sort != null) {\r\n    const { field, order } = params.sort;\r\n    if (order === 'ASC') {\r\n      sortArray(permittedData, field, 'asc');\r\n    } else {\r\n      sortArray(permittedData, field, 'desc');\r\n    }\r\n  }\r\n  const pageStart = (params.pagination.page - 1) * params.pagination.perPage;\r\n  const pageEnd = pageStart + params.pagination.perPage;\r\n  const dataPage = permittedData.slice(pageStart, pageEnd) as T[];\r\n  const total = permittedData.length;\r\n\r\n  if (options.relativeFilePaths) {\r\n    const fetchedData = await Promise.all(\r\n      permittedData.map((doc) => recursivelyMapStorageUrls(fireWrapper, doc))\r\n    );\r\n    return { data: fetchedData, total };\r\n  }\r\n\r\n  return { data: dataPage, total };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function Update<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.UpdateParams,\r\n  client: FireClient\r\n): Promise<ra.UpdateResult<T>> {\r\n  const { rm } = client;\r\n  log('Update', { resourceName, params });\r\n  const id = params.id + '';\r\n  delete params.data.id;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('Update', { resourceName, resource: r, params });\r\n  const data = await client.parseDataAndUpload(r, id, params.data);\r\n  const docObj = { ...data };\r\n  client.checkRemoveIdField(docObj, id);\r\n  await client.addUpdatedByFields(docObj);\r\n  const docObjTransformed = client.transformToDb(resourceName, docObj, id);\r\n  await updateDoc(doc(r.collection, id), docObjTransformed);\r\n  return {\r\n    data: {\r\n      ...data,\r\n      id: id,\r\n    },\r\n  };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function UpdateMany(\r\n  resourceName: string,\r\n  params: ra.UpdateManyParams,\r\n  client: FireClient\r\n): Promise<ra.UpdateManyResult> {\r\n  const { rm } = client;\r\n  log('UpdateMany', { resourceName, params });\r\n  delete params.data.id;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('UpdateMany', { resourceName, resource: r, params });\r\n  const ids = params.ids;\r\n  const returnData = await Promise.all(\r\n    ids.map(async (id) => {\r\n      const idStr = id + '';\r\n      const data = await client.parseDataAndUpload(r, idStr, params.data);\r\n      const docObj = { ...data };\r\n      client.checkRemoveIdField(docObj, idStr);\r\n      await client.addUpdatedByFields(docObj);\r\n      const docObjTransformed = client.transformToDb(\r\n        resourceName,\r\n        docObj,\r\n        idStr\r\n      );\r\n      await updateDoc(doc(r.collection, idStr), docObjTransformed);\r\n      return {\r\n        ...data,\r\n        id: idStr,\r\n      };\r\n    })\r\n  );\r\n  return {\r\n    data: returnData,\r\n  };\r\n}\r\n","import { doc, getDoc, setDoc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\n\r\nexport async function Create<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.CreateParams,\r\n  client: FireClient\r\n): Promise<ra.CreateResult<T>> {\r\n  const { rm, fireWrapper } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('Create', { resourceName, resource: r, params });\r\n  const hasOverridenDocId = params.data && params.data.id;\r\n  log('Create', { hasOverridenDocId });\r\n  if (hasOverridenDocId) {\r\n    const overridenId = params.data.id;\r\n    const exists = (await getDoc(doc(r.collection, overridenId))).exists();\r\n    if (exists) {\r\n      throw new Error(\r\n        `the id:\"${overridenId}\" already exists, please use a unique string if overriding the 'id' field`\r\n      );\r\n    }\r\n\r\n    const createData = await client.parseDataAndUpload(\r\n      r,\r\n      overridenId,\r\n      params.data\r\n    );\r\n    if (!overridenId) {\r\n      throw new Error('id must be a valid string');\r\n    }\r\n    const createDocObj = { ...createData };\r\n    client.checkRemoveIdField(createDocObj, overridenId);\r\n    await client.addCreatedByFields(createDocObj);\r\n    await client.addUpdatedByFields(createDocObj);\r\n    const createDocObjTransformed = client.transformToDb(\r\n      resourceName,\r\n      createDocObj,\r\n      overridenId\r\n    );\r\n    log('Create', { docObj: createDocObj });\r\n    await setDoc(doc(r.collection, overridenId), createDocObjTransformed, {\r\n      merge: false,\r\n    });\r\n    return {\r\n      data: {\r\n        ...createDocObjTransformed,\r\n        id: overridenId,\r\n      },\r\n    };\r\n  }\r\n  const newId = fireWrapper.dbMakeNewId();\r\n  const data = await client.parseDataAndUpload(r, newId, params.data);\r\n  const docObj = { ...data };\r\n  client.checkRemoveIdField(docObj, newId);\r\n  await client.addCreatedByFields(docObj);\r\n  await client.addUpdatedByFields(docObj);\r\n  const docObjTransformed = client.transformToDb(resourceName, docObj, newId);\r\n  await setDoc(doc(r.collection, newId), docObjTransformed, { merge: false });\r\n  return {\r\n    data: {\r\n      ...docObjTransformed,\r\n      id: newId,\r\n    },\r\n  };\r\n}\r\n","import { deleteDoc, doc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database/FireClient';\r\nimport { DeleteSoft } from './Delete.Soft';\r\n\r\nexport async function Delete<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.DeleteParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteResult<T>> {\r\n  const { rm, options } = client;\r\n  if (options.softDelete) {\r\n    return DeleteSoft(resourceName, params, client);\r\n  }\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('apiDelete', { resourceName, resource: r, params });\r\n  try {\r\n    const id = params.id + '';\r\n\r\n    await deleteDoc(doc(r.collection, id));\r\n  } catch (error) {\r\n    throw new Error(error as any);\r\n  }\r\n  return {\r\n    data: params.previousData as T,\r\n  };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log, logError } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function DeleteSoft<T extends ra.Record>(\r\n  resourceName: string,\r\n  params: ra.DeleteParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteResult<T>> {\r\n  const { rm } = client;\r\n  const id = params.id + '';\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteSoft', { resourceName, resource: r, params });\r\n  const docObj = { deleted: true };\r\n  await client.addUpdatedByFields(docObj);\r\n\r\n  updateDoc(doc(r.collection, id), docObj).catch((error) => {\r\n    logError('DeleteSoft error', { error });\r\n  });\r\n\r\n  return {\r\n    data: params.previousData as T,\r\n  };\r\n}\r\n","import { doc } from 'firebase/firestore';\r\nimport { log } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\nimport { DeleteManySoft } from './DeleteMany.Soft';\r\n\r\nexport async function DeleteMany(\r\n  resourceName: string,\r\n  params: ra.DeleteManyParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteManyResult> {\r\n  const { options, rm, fireWrapper } = client;\r\n  if (options.softDelete) {\r\n    return DeleteManySoft(resourceName, params, client);\r\n  }\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteMany', { resourceName, resource: r, params });\r\n  const returnData: ra.Identifier[] = [];\r\n  const batch = fireWrapper.dbCreateBatch();\r\n  for (const id of params.ids) {\r\n    const idStr = id + '';\r\n    const docToDelete = doc(r.collection, idStr);\r\n    batch.delete(docToDelete);\r\n    returnData.push(id);\r\n  }\r\n\r\n  try {\r\n    await batch.commit();\r\n  } catch (error) {\r\n    throw new Error(error as any);\r\n  }\r\n  return { data: returnData };\r\n}\r\n","import { doc, updateDoc } from 'firebase/firestore';\r\nimport { log, logError } from '../../misc';\r\nimport * as ra from '../../misc/react-admin-models';\r\nimport { FireClient } from '../database';\r\n\r\nexport async function DeleteManySoft(\r\n  resourceName: string,\r\n  params: ra.DeleteManyParams,\r\n  client: FireClient\r\n): Promise<ra.DeleteManyResult> {\r\n  const { rm } = client;\r\n  const r = await rm.TryGetResource(resourceName);\r\n  log('DeleteManySoft', { resourceName, resource: r, params });\r\n  const ids = params.ids;\r\n  const returnData = await Promise.all(\r\n    ids.map(async (id) => {\r\n      const idStr = id + '';\r\n      const docObj = { deleted: true };\r\n      await client.addUpdatedByFields(docObj);\r\n      updateDoc(doc(r.collection, idStr), docObj).catch((error) => {\r\n        logError('apiSoftDeleteMany error', { error });\r\n      });\r\n      return idStr;\r\n    })\r\n  );\r\n  return {\r\n    data: returnData,\r\n  };\r\n}\r\n"],"names":["sortArray","data","field","dir","sort","a","b","get","rawB","isAsc","Number","isFinite","rawA","basicSort","toLowerCase","Date","aValue","bValue","filterArray","searchFields","isEmpty","searchObjs","Object","keys","map","fieldName","getSubObjects","value","searchField","searchValue","tree","leaves","obj","path","key","hasOwnProperty","objVal","Array","recursivelyWalk","currentPath","push","getFieldReferences","apply","filter","row","reduce","acc","cur","res","searchThis","toString","includes","isArray","doesRowMatch","LogNoOp","LoggerBase","title","cacheEnabledKey","this","isEnabled","localStorage","getItem","SetEnabled","setItem","removeItem","console","log","bind","warn","error","logger","KEY_SINGLE","logError","dispatch","eventName","fileName","eventMonitor","document","getElementById","event","CustomEvent","detail","dispatchEvent","REF_INDENTIFIER","translateDocFromFirestore","parsedDoc","refdocs","recusivelyCheckObjectValue","result","input","fieldPath","toDate","index","isInputADocReference","documentReference","refDocPath","id","firestore","parent","recursivelyMapStorageUrls","fireWrapper","fieldValue","_exit","_temp2","_result","Promise","all","_recursivelyMapStorag","resolve","_recursivelyMapStorag2","e","reject","isFileField","has","getDownloadURL","ref","storage","src","then","_fieldValue$src","_catch","parseFireStoreDocument","doc","logWarn","refDocs","d","set","applyRefDocs","dataWithRefs","getAbsolutePath","rootRef","relativePath","Error","rootRefValue","withSlashes","join","split","length","slice","joinPaths","call","arguments","translateDocToFirestore","uploads","recusivelyParseObjectValue","fieldDotsPath","refPath","fieldSlashesPath","rawFile","FirebaseWrapper","inputOptions","firebaseConfig","_app","_firestore","_storage","_auth","options","optionsSafe","window","app","apps","getApps","getApp","initializeApp","ObtainFirebaseApp","getFirestore","getStorage","getAuth","_proto","prototype","dbGetCollection","absolutePath","collection","dbCreateBatch","writeBatch","dbMakeNewId","OnUserLogout","callBack","onAuthStateChanged","user","isLoggedOut","putFile","storagePath","uploadBytesResumable","taskResult","rej","task","t","url","downloadUrl","getStorageDownloadUrl","fieldSrc","serverTimestamp","firestoreServerTimestamp","authSetPersistence","persistenceInput","persistenceResolved","browserLocalPersistence","inMemoryPersistence","browserSessionPersistence","setPersistence","authSigninEmailPassword","email","password","signInWithEmailAndPassword","authSignOut","signOut","authGetUserLoggedIn","_this5","auth","currentUser","unsubscribe","GetUserLogin","GetApp","db","AuthClient","optionsInput","persistence","HandleAuthLogin","params","_this","username","getUserLogin","HandleAuthLogout","HandleAuthError","errorHttp","retrieveStatusTxt","status","HandleAuthCheck","HandleGetPermissions","_this3","getIdTokenResult","token","claims","HandleGetIdentity","_this4","_ref","displayName","photoURL","uid","fullName","avatar","HandleGetJWTAuthTime","authTime","HandleGetJWTExpirationTime","_this6","expirationTime","HandleGetJWTSignInProvider","_this7","signInProvider","HandleGetJWTIssuedAtTime","_this8","issuedAtTime","HandleGetJWTToken","_this9","ResourceManager","flogger","resources","TryGetResource","resourceName","refresh","collectionQuery","TryGetResourcePromise","_this2","RefreshResource","GetResource","resource","initPath","_this4$options","lazyLoading","_this4$options$lazyLo","enabled","collectionRef","applyQuery","getDocs","collectionOrQuery","newDocs","forEach","list","logDocument","docs","collectionPath","GetSingleDoc","docId","getDoc","docSnap","exists","hasBeenInited","pathAbsolute","allResources","getUserIdentifier","associateUsersById","getCurrentUserId","getCurrentUserEmail","collRef","FireClient","rm","checkRemoveIdField","dontAddIdFieldToDoc","transformToDb","documentData","parseDataAndUpload","r","docPath","u","parseStoragePath","useFileName","fileNameBits","File","name","fileExtension","pop","useFileNamesInStorage","saveFile","link","addCreatedByFields","AddCreatedByFields","disableMeta","currentUserIdentifier","createAtSelector","GetSelectorsCreateAt","renameMetaFields","created_at","casing","metaFieldCasing","defautCase","createBySelector","GetSelectorsCreateBy","created_by","addUpdatedByFields","AddUpdatedByFields","updateAtSelector","GetSelectorsUpdateAt","updated_at","updateBySelector","updated_by","GetSelectorsUpdateBy","_this4$fireWrapper$pu","on","snapshot","progress","bytesTransferred","totalBytes","state","relativeFilePaths","storageError","pact","s","_Pact","o","_settle","v","observer","onFulfilled","onRejected","callback","thenable","getQueryCursor","btoa","JSON","stringify","_extends","docSnapshot","paramsToQuery","defaultParamsToQueryOptions","_temp","paginationConstraints","noPagination","query","concat","filterConstraints","sortConstraints","withPagination","filters","queries","entries","flatMap","_ref2","where","toLocaleLowerCase","getSortConstraints","parsedOrder","order","orderBy","pagination","getPaginationConstraints","queryConstraints","perPage","page","limit","queryCursor","_temp3","startAfter","findLastQueryCursor","pageLimit","currentPage","newQuery","lastQueryCursor","snapshots","docsLength","_params$pagination","currentPageParams","_getQueryCursor","_findLastQueryCursor","getFiltersConstraints","getFullParamsForQuery","reactAdminParams","softdeleteEnabled","deleted","FirebaseLazyLoadingClient","client","apiGetList","tryGetResource","softDelete","resultsCount","message","total","allCursorsKey","localCursorKeys","newCursors","parse","setQueryCursor","getNextPageParams","getCountFromServer","count","parsedData","_data$total","apiGetManyReference","_extends2","filterWithTarget","target","_exit2","_temp5","_result2","_temp6","_temp4","AuthProvider","VerifyAuthProviderArgs","logging","login","logout","checkAuth","checkError","getPermissions","getIdentity","getAuthUser","getJWTAuthTime","getJWTExpirationTime","getJWTSignInProvider","getJWTClaims","getJWTToken","_options$firestoreCos","_options$firestoreCos2","run","cb","_cb","errorMsg","code","statusTxt","regexResult","exec","retrieveStatusCode","errorObj","json","verifyDataProviderArgs","ResetCount","shouldReset","docCount","_options$lazyLoading","incrementBy","currentCountRaw","parseInt","incremented","incrementRead","MakeFirestoreLogger","firestoreCostsLogger","persistCount","getList","lazyClient","filterSafe","dataPage","softDeleted","filteredData","pageStart","fetchedData","GetList","getOne","GetOne","dataSingle","getMany","GetMany","ids","idObj","matchDocSnaps","permittedData","matches","snap","getManyReference","GetManyReference","targetField","targetIdFilter","targetValue","_params$sort","update","Update","docObj","updateDoc","docObjTransformed","updateMany","UpdateMany","idStr","returnData","create","Create","newId","setDoc","merge","hasOverridenDocId","overridenId","_getDoc","createData","createDocObj","createDocObjTransformed","_data","Delete","previousData","DeleteSoft","deleteDoc","deleteMany","DeleteMany","DeleteManySoft","_step","_iterator","done","docToDelete","batch","commit"],"mappings":"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"}